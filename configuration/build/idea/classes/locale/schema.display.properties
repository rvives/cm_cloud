json.admin.v1.definitions.AssignableQueue.description = A queue to which assignable entities can be assigned
json.admin.v1.definitions.AssignableQueue.properties.description.description = The description of what this queue is for
json.admin.v1.definitions.AssignableQueue.properties.description.title = Description
json.admin.v1.definitions.AssignableQueue.properties.id.description = The unique identifier of this element
json.admin.v1.definitions.AssignableQueue.properties.id.title = ID
json.admin.v1.definitions.AssignableQueue.properties.name.description = The name of this queue
json.admin.v1.definitions.AssignableQueue.properties.name.title = Name
json.admin.v1.definitions.AssignableQueue.properties.subGroupVisible.description = True if the queue is visible from sub-groups of the group to which it belongs
json.admin.v1.definitions.AssignableQueue.properties.subGroupVisible.title = Sub group visible
json.admin.v1.definitions.AssignableQueue.title = Assignable queue
json.admin.v1.definitions.Group.description = A named group within the system
json.admin.v1.definitions.Group.properties.displayName.description = The formatted name of this group
json.admin.v1.definitions.Group.properties.displayName.title = Display name
json.admin.v1.definitions.Group.properties.groupType.description = Type of this group
json.admin.v1.definitions.Group.properties.groupType.title = Group type
json.admin.v1.definitions.Group.properties.id.description = The unique identifier of this group
json.admin.v1.definitions.Group.properties.id.title = ID
json.admin.v1.definitions.Group.properties.name.description = The name of this group
json.admin.v1.definitions.Group.properties.name.title = Name
json.admin.v1.definitions.Group.properties.parent.description = A reference to the `Group` that is the parent of this group
json.admin.v1.definitions.Group.properties.parent.title = Parent
json.admin.v1.definitions.Group.properties.securityZone.description = A reference to the `SecurityZone` that this group belongs to
json.admin.v1.definitions.Group.properties.securityZone.title = Security zone
json.admin.v1.definitions.Group.properties.supervisor.description = A reference to the `User` that represents the supervisor of this group
json.admin.v1.definitions.Group.properties.supervisor.title = Supervisor
json.admin.v1.definitions.Group.title = Group
json.admin.v1.definitions.GroupUser.description = Details about a user's involvement in a group
json.admin.v1.definitions.GroupUser.properties.id.description = The unique identifier of this element
json.admin.v1.definitions.GroupUser.properties.id.title = ID
json.admin.v1.definitions.GroupUser.properties.loadFactor.description = Percentage value of normal workload to be given to this user in this group
json.admin.v1.definitions.GroupUser.properties.loadFactor.title = Load factor
json.admin.v1.definitions.GroupUser.properties.loadFactorType.description = Type of load factor privileges the user has in this group
json.admin.v1.definitions.GroupUser.properties.loadFactorType.title = Load factor type
json.admin.v1.definitions.GroupUser.properties.manager.description = Flag indicating whether the user has permission to see activity within the group
json.admin.v1.definitions.GroupUser.properties.manager.title = Manager
json.admin.v1.definitions.GroupUser.properties.member.description = Flag indicating whether the user is a working member of the group (for purposes of work assignment, for example), as opposed to simply being associated with the group as a manager or other auxiliary person
json.admin.v1.definitions.GroupUser.properties.member.title = Member
json.admin.v1.definitions.GroupUser.properties.user.description = The associated user
json.admin.v1.definitions.GroupUser.properties.user.title = User
json.admin.v1.definitions.GroupUser.title = Details about a user's involvement in a group
json.admin.v1.definitions.Organization.description = An `Organization` represents an organization that can contain groups and users. One `Organization` is used to represent the insurer, while other `Organization` elements represent external organizations, such as third-party agencies.
json.admin.v1.definitions.Organization.properties.carrier.description = A `true` value indicates that this organization represents the insurer rather than an external organization. Only one `Organization` within the system can have this field set to `true`.
json.admin.v1.definitions.Organization.properties.carrier.title = Carrier
json.admin.v1.definitions.Organization.properties.contact.description = Information about the primary contact for the organization
json.admin.v1.definitions.Organization.properties.contact.title = Contact
json.admin.v1.definitions.Organization.properties.displayName.description = The formatted name of the `Organization`
json.admin.v1.definitions.Organization.properties.displayName.title = Display name
json.admin.v1.definitions.Organization.properties.id.description = The unique identifier of the `Organization`
json.admin.v1.definitions.Organization.properties.id.title = ID
json.admin.v1.definitions.Organization.properties.masterAdmin.description = A `true` value indicates that this `Organization` has administrator powers over all other `Organization` elements in the system
json.admin.v1.definitions.Organization.properties.masterAdmin.title = Master admin
json.admin.v1.definitions.Organization.properties.name.description = The name of the organization
json.admin.v1.definitions.Organization.properties.name.title = Name
json.admin.v1.definitions.Organization.properties.rootGroup.description = A reference to the `Group` that is the root group for this `Organization`
json.admin.v1.definitions.Organization.properties.rootGroup.title = Root group
json.admin.v1.definitions.Organization.properties.type.description = The type of organization
json.admin.v1.definitions.Organization.properties.type.title = Type
json.admin.v1.definitions.Organization.title = Organization
json.admin.v1.definitions.Role.description = A named role within the system
json.admin.v1.definitions.Role.properties.carrierInternal.description = A `true` value indicates that the role is applicable to users internal to the carrier organization
json.admin.v1.definitions.Role.properties.carrierInternal.title = Carrier internal
json.admin.v1.definitions.Role.properties.description.description = Detailed description of the role
json.admin.v1.definitions.Role.properties.description.title = Description
json.admin.v1.definitions.Role.properties.displayName.description = The formatted name of the role
json.admin.v1.definitions.Role.properties.displayName.title = Display name
json.admin.v1.definitions.Role.properties.id.description = The unique identifier of the `Role`
json.admin.v1.definitions.Role.properties.id.title = ID
json.admin.v1.definitions.Role.properties.name.description = The name of the role
json.admin.v1.definitions.Role.properties.name.title = Name
json.admin.v1.definitions.Role.properties.roleType.description = The type of role
json.admin.v1.definitions.Role.properties.roleType.title = Role type
json.admin.v1.definitions.Role.title = Role
json.admin.v1.definitions.RolePermission.description = A RolePermission represents a permission granted to a particular role
json.admin.v1.definitions.RolePermission.properties.id.description = The unique identifier of this element
json.admin.v1.definitions.RolePermission.properties.id.title = ID
json.admin.v1.definitions.RolePermission.properties.permission.description = A reference to a `SystemPermissionType` that has been granted to a role
json.admin.v1.definitions.RolePermission.properties.permission.title = Permission
json.admin.v1.definitions.RolePermission.title = Role permission
json.admin.v1.definitions.User.description = A named user within the system
json.admin.v1.definitions.User.properties.active.description = A `true` value indicates that the user is currently active and allowed to log in. A `false` value indicates the user has been deactivated and cannot currently log in.
json.admin.v1.definitions.User.properties.active.title = Active
json.admin.v1.definitions.User.properties.cellPhone.description = The cell phone number for the user
json.admin.v1.definitions.User.properties.cellPhone.title = Cell phone
json.admin.v1.definitions.User.properties.displayName.description = The formatted name of the `User`
json.admin.v1.definitions.User.properties.displayName.title = Display name
json.admin.v1.definitions.User.properties.employeeNumber.description = The employee number assigned to the user
json.admin.v1.definitions.User.properties.employeeNumber.title = Employee number
json.admin.v1.definitions.User.properties.externalUser.description = A `true` value indicates that the user represents a user from an external organization, rather than a user from within the insurer's organization
json.admin.v1.definitions.User.properties.externalUser.title = External user
json.admin.v1.definitions.User.properties.firstName.description = The first name of the user
json.admin.v1.definitions.User.properties.firstName.title = First name
json.admin.v1.definitions.User.properties.groups.description = The groups this user is part of
json.admin.v1.definitions.User.properties.groups.title = Groups
json.admin.v1.definitions.User.properties.homePhone.description = The home phone number for the user
json.admin.v1.definitions.User.properties.homePhone.title = Home phone
json.admin.v1.definitions.User.properties.id.description = The unique identifier of the `User`
json.admin.v1.definitions.User.properties.id.title = ID
json.admin.v1.definitions.User.properties.lastName.description = The last name of the user
json.admin.v1.definitions.User.properties.lastName.title = Last name
json.admin.v1.definitions.User.properties.roles.description = The roles assigned to the user
json.admin.v1.definitions.User.properties.roles.title = Roles
json.admin.v1.definitions.User.properties.suffix.description = The name suffix of the user
json.admin.v1.definitions.User.properties.suffix.title = Suffix
json.admin.v1.definitions.User.properties.username.description = The username for the user
json.admin.v1.definitions.User.properties.username.title = Username
json.admin.v1.definitions.User.properties.vacationStatus.description = Indicates whether the user is considered to be on vacation
json.admin.v1.definitions.User.properties.vacationStatus.title = Vacation status
json.admin.v1.definitions.User.properties.workPhone.description = The work phone number for the user
json.admin.v1.definitions.User.properties.workPhone.title = Work phone
json.admin.v1.definitions.User.title = User
json.admin.v1.definitions.UserGroupReference.description = A reference to a `Group` that the user belongs to
json.admin.v1.definitions.UserGroupReference.properties.displayName.description = The formatted name of the element
json.admin.v1.definitions.UserGroupReference.properties.displayName.title = Display name
json.admin.v1.definitions.UserGroupReference.properties.id.description = The unique identifier of the referenced element
json.admin.v1.definitions.UserGroupReference.properties.id.title = ID
json.admin.v1.definitions.UserGroupReference.properties.type.description = The type of the referenced element
json.admin.v1.definitions.UserGroupReference.properties.type.title = Type
json.admin.v1.definitions.UserGroupReference.properties.uri.description = The canonical URI for the referenced element
json.admin.v1.definitions.UserGroupReference.properties.uri.title = URI
json.admin.v1.definitions.UserGroupReference.title = User group reference
json.admin.v1.definitions.UserRoleReference.description = A reference to a `Role` that has been granted to a user
json.admin.v1.definitions.UserRoleReference.properties.displayName.description = The formatted name of the element
json.admin.v1.definitions.UserRoleReference.properties.displayName.title = Display name
json.admin.v1.definitions.UserRoleReference.properties.id.description = The unique identifier of the referenced element
json.admin.v1.definitions.UserRoleReference.properties.id.title = ID
json.admin.v1.definitions.UserRoleReference.properties.type.description = The type of the referenced element
json.admin.v1.definitions.UserRoleReference.properties.type.title = Type
json.admin.v1.definitions.UserRoleReference.properties.uri.description = The canonical URI for the referenced element
json.admin.v1.definitions.UserRoleReference.properties.uri.title = URI
json.admin.v1.definitions.UserRoleReference.title = User role reference
json.async.v1.definitions.AsyncRequest.description = Details of an API request made using the `Prefer respond-async` header
json.async.v1.definitions.AsyncRequest.properties.acceptedTime.description = The date and time that the original API request was accepted for processing.
json.async.v1.definitions.AsyncRequest.properties.acceptedTime.title = Accepted time
json.async.v1.definitions.AsyncRequest.properties.completionTime.description = The date and time that processing for this request was completed. Only present if the request has completed.
json.async.v1.definitions.AsyncRequest.properties.completionTime.title = Completion time
json.async.v1.definitions.AsyncRequest.properties.id.description = The unique identifier of this element
json.async.v1.definitions.AsyncRequest.properties.id.title = ID
json.async.v1.definitions.AsyncRequest.properties.requestMethod.description = The HTTP method used for the original API request
json.async.v1.definitions.AsyncRequest.properties.requestMethod.title = Request method
json.async.v1.definitions.AsyncRequest.properties.requestPath.description = The path used for the original API request
json.async.v1.definitions.AsyncRequest.properties.requestPath.title = Request path
json.async.v1.definitions.AsyncRequest.properties.requestQueryString.description = The query string supplied on the original API request, if any
json.async.v1.definitions.AsyncRequest.properties.requestQueryString.title = Request query string
json.async.v1.definitions.AsyncRequest.properties.responseBodyJson.description = The body of the response as a JSON object. Only present if the request has completed and its response has a `Content-Type` of `application/json`.
json.async.v1.definitions.AsyncRequest.properties.responseBodyJson.title = Response body JSON
json.async.v1.definitions.AsyncRequest.properties.responseHeaders.description = A map of the headers on the response. Only present if the request has completed.
json.async.v1.definitions.AsyncRequest.properties.responseHeaders.title = Response headers
json.async.v1.definitions.AsyncRequest.properties.responseStatus.description = The HTTP status code of the response. Only present if the request has completed.
json.async.v1.definitions.AsyncRequest.properties.responseStatus.title = Response status
json.async.v1.definitions.AsyncRequest.properties.startTime.description = The date and time when processing of the request started. Only present if the request has started or completed processing.
json.async.v1.definitions.AsyncRequest.properties.startTime.title = Start time
json.async.v1.definitions.AsyncRequest.properties.status.description = The current status of this request, one of `Accepted`, `InProgress`, or `Completed`.
json.async.v1.definitions.AsyncRequest.properties.status.title = Status
json.async.v1.definitions.AsyncRequest.title = Async API request
json.async.v1.definitions.AsyncResponseHeaderMap.additionalProperties.description = Each key in this map represents a header name, while each value is a list of values for that header
json.async.v1.definitions.AsyncResponseHeaderMap.additionalProperties.title = Additional properties
json.async.v1.definitions.AsyncResponseHeaderMap.description = A map of HTTP response headers on an async request response
json.async.v1.definitions.AsyncResponseHeaderMap.title = Async API response header map
json.batch.v1.definitions.BatchRequest.description = The body of a batch request
json.batch.v1.definitions.BatchRequest.properties.requests.description = The array of subrequests
json.batch.v1.definitions.BatchRequest.properties.requests.title = Requests
json.batch.v1.definitions.BatchRequest.title = Batch request
json.batch.v1.definitions.BatchResponse.description = The body of a response to a batch request. The `responses` field will have one element for every entry in the `requests` field on the request, and responses will appear in the same order.
json.batch.v1.definitions.BatchResponse.properties.responses.description = The list of subresponses, appearing in the same order as the elements in the `requests` field of the request
json.batch.v1.definitions.BatchResponse.properties.responses.title = Responses
json.batch.v1.definitions.BatchResponse.title = Batch response
json.batch.v1.definitions.BatchSubRequest.description = An individual subrequest within a batch request
json.batch.v1.definitions.BatchSubRequest.properties.body.description = The body of the subrequest
json.batch.v1.definitions.BatchSubRequest.properties.body.title = Body
json.batch.v1.definitions.BatchSubRequest.properties.headers.description = Headers that will be included as part of the subrequest. Any headers defined using this field will override header values inherited from the main request. Any headers present on the main request that are not defined in this list will be inherited when the subrequest is made, with the exception of the `GW-Checksum` header.
json.batch.v1.definitions.BatchSubRequest.properties.headers.title = Headers
json.batch.v1.definitions.BatchSubRequest.properties.method.description = The HTTP method for the subrequest
json.batch.v1.definitions.BatchSubRequest.properties.method.title = Method
json.batch.v1.definitions.BatchSubRequest.properties.onFail.description = Controls whether or not subsequent subrequests are processed if this subrequest fails. The default behavior is to continue processing subrequests. The `abort` option specifies that all subsequent subrequests will be skipped.
json.batch.v1.definitions.BatchSubRequest.properties.onFail.title = On fail
json.batch.v1.definitions.BatchSubRequest.properties.path.description = The path for the subrequest. This path is relative to the root of the API hosting the batch endpoint. For example, if the batch endpoint is `<servlet>/rest/common/v1/batch`, then a path of `/activities` will mean a request against `<servlet>/rest/common/v1/activities`. The path must start with `/` and cannot contain whitespace.
json.batch.v1.definitions.BatchSubRequest.properties.path.title = Path
json.batch.v1.definitions.BatchSubRequest.properties.query.description = The query string to use for the subrequest
json.batch.v1.definitions.BatchSubRequest.properties.query.title = Query
json.batch.v1.definitions.BatchSubRequest.title = Batch subrequest
json.batch.v1.definitions.BatchSubResponse.description = A subresponse to a batch subrequest
json.batch.v1.definitions.BatchSubResponse.properties.body.description = The body of the subresponse
json.batch.v1.definitions.BatchSubResponse.properties.body.title = Body
json.batch.v1.definitions.BatchSubResponse.properties.code.description = The HTTP status code for the subresponse
json.batch.v1.definitions.BatchSubResponse.properties.code.title = Code
json.batch.v1.definitions.BatchSubResponse.properties.headers.description = The headers returned for the subresponse
json.batch.v1.definitions.BatchSubResponse.properties.headers.title = Headers
json.batch.v1.definitions.BatchSubResponse.properties.skipped.description = A `true` value indicates that the corresponding subrequest was not processed due to a prior failed request that specified the `onFail` field with the `abort` option
json.batch.v1.definitions.BatchSubResponse.properties.skipped.title = Skipped
json.batch.v1.definitions.BatchSubResponse.title = Batch subresponse
json.batch.v1.definitions.Header.description = An HTTP request or response header
json.batch.v1.definitions.Header.properties.name.description = The header name
json.batch.v1.definitions.Header.properties.name.title = Name
json.batch.v1.definitions.Header.properties.value.description = The header value
json.batch.v1.definitions.Header.properties.value.title = Value
json.batch.v1.definitions.Header.title = Header
json.common.v1.definitions.Activity.description = An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of
json.common.v1.definitions.Activity.properties.activityPattern.description = The code of the `ActivityPattern` used to create this activity and set its initial values
json.common.v1.definitions.Activity.properties.activityPattern.title = Activity pattern
json.common.v1.definitions.Activity.properties.activityType.description = The type of this activity, such as `general` or `approval`
json.common.v1.definitions.Activity.properties.activityType.title = Activity type
json.common.v1.definitions.Activity.properties.approvalIssue.description = The reason approval is needed. Only applicable to activities with an `activityType` of `approval`.
json.common.v1.definitions.Activity.properties.approvalIssue.title = Approval issue
json.common.v1.definitions.Activity.properties.approvalRationale.description = Rationale for approving or rejecting this activity. Only applicable to activities with an `activityType` of `approval`.
json.common.v1.definitions.Activity.properties.approvalRationale.title = Approval rationale
json.common.v1.definitions.Activity.properties.approved.description = This field is `true` if this activity has been approved, `false` if this activity has been rejected, and omitted otherwise. Only applicable to activities with an `activityType` of `approval`.
json.common.v1.definitions.Activity.properties.approved.title = Approved
json.common.v1.definitions.Activity.properties.assignedByUser.description = A reference to the `User` who last assigned or re-assigned this activity
json.common.v1.definitions.Activity.properties.assignedByUser.title = Assigned by user
json.common.v1.definitions.Activity.properties.assignedGroup.description = A reference to the `Group` that this activity is currently assigned to
json.common.v1.definitions.Activity.properties.assignedGroup.title = Assigned group
json.common.v1.definitions.Activity.properties.assignedQueue.description = A reference to the `Queue` that this activity is currently assigned to
json.common.v1.definitions.Activity.properties.assignedQueue.title = Assigned queue
json.common.v1.definitions.Activity.properties.assignedUser.description = A reference to the `User` that this activity is currently assigned to
json.common.v1.definitions.Activity.properties.assignedUser.title = Assigned user
json.common.v1.definitions.Activity.properties.assignmentStatus.description = The current assignment status of this activity, such as `assigned` or `unassigned`
json.common.v1.definitions.Activity.properties.assignmentStatus.title = Assignment status
json.common.v1.definitions.Activity.properties.closeDate.description = The date and time when this activity was completed, skipped, approved, or rejected
json.common.v1.definitions.Activity.properties.closeDate.title = Close date
json.common.v1.definitions.Activity.properties.closeUser.description = A reference to the `User` that completed, skipped, approved, or rejected this activity
json.common.v1.definitions.Activity.properties.closeUser.title = Close user
json.common.v1.definitions.Activity.properties.createTime.description = The date and time when this `Activity` was created
json.common.v1.definitions.Activity.properties.createTime.title = Create time
json.common.v1.definitions.Activity.properties.description.description = The description of this activity
json.common.v1.definitions.Activity.properties.description.title = Description
json.common.v1.definitions.Activity.properties.dueDate.description = Date and time by which a person should complete the activity. If not completed by this time, the activity is considered overdue. Not applicable to activities that represent events rather than tasks.
json.common.v1.definitions.Activity.properties.dueDate.title = Due date
json.common.v1.definitions.Activity.properties.endDate.description = Date and time at which the activity is expected to end. Only applicable to activities that represent events.
json.common.v1.definitions.Activity.properties.endDate.title = End date
json.common.v1.definitions.Activity.properties.escalated.description = A `true` value for this field indicates that the activity has been escalated
json.common.v1.definitions.Activity.properties.escalated.title = Escalated
json.common.v1.definitions.Activity.properties.escalationDate.description = Date and time at which this activity will be escalated if it has not yet been completed
json.common.v1.definitions.Activity.properties.escalationDate.title = Escalation date
json.common.v1.definitions.Activity.properties.externallyOwned.description = A `true` value for this field indicates that the activity is owned by a user or group outside of the insurer
json.common.v1.definitions.Activity.properties.externallyOwned.title = Externally owned
json.common.v1.definitions.Activity.properties.id.description = The unique identifier of this `Activity`
json.common.v1.definitions.Activity.properties.id.title = ID
json.common.v1.definitions.Activity.properties.initialAssignment.description = The `Assignee` that this activity should be assigned to when it is first created
json.common.v1.definitions.Activity.properties.initialAssignment.title = Initial assignment
json.common.v1.definitions.Activity.properties.mandatory.description = A `true` value for this field indicates that the activity is mandatory and cannot be skipped
json.common.v1.definitions.Activity.properties.mandatory.title = Mandatory
json.common.v1.definitions.Activity.properties.priority.description = The priority of this activity
json.common.v1.definitions.Activity.properties.priority.title = Priority
json.common.v1.definitions.Activity.properties.recurring.description = A `true` value indicates that this activity is recurring
json.common.v1.definitions.Activity.properties.recurring.title = Recurring
json.common.v1.definitions.Activity.properties.startDate.description = Date and time at which the activity is scheduled to begin. Only applicable to activities that represent events.
json.common.v1.definitions.Activity.properties.startDate.title = Start date
json.common.v1.definitions.Activity.properties.status.description = The status of this activity, such as `open` or `complete`
json.common.v1.definitions.Activity.properties.status.title = Status
json.common.v1.definitions.Activity.properties.subject.description = A brief title for the activity
json.common.v1.definitions.Activity.properties.subject.title = Subject
json.common.v1.definitions.Activity.title = Activity
json.common.v1.definitions.ActivityPattern.description = An `ActivityPattern` is a template for an activity, and is used to create a new activity and set defaults for some of its fields
json.common.v1.definitions.ActivityPattern.properties.activityClass.description = The class of activity that this activity pattern creates, such as `task` or `event`
json.common.v1.definitions.ActivityPattern.properties.activityClass.title = Activity class
json.common.v1.definitions.ActivityPattern.properties.activityType.description = The type of activity that this activity pattern creates, such as `general` or `approval`
json.common.v1.definitions.ActivityPattern.properties.activityType.title = Activity type
json.common.v1.definitions.ActivityPattern.properties.category.description = The category of the activity pattern. Used to help organize `ActivityPatterns` when presenting them to a user.
json.common.v1.definitions.ActivityPattern.properties.category.title = Category
json.common.v1.definitions.ActivityPattern.properties.code.description = The code that uniquely identifies this `ActivityPattern`
json.common.v1.definitions.ActivityPattern.properties.code.title = Code
json.common.v1.definitions.ActivityPattern.properties.description.description = The default `description` for activities created from this activity pattern
json.common.v1.definitions.ActivityPattern.properties.description.title = Description
json.common.v1.definitions.ActivityPattern.properties.dueDate.description = The default `dueDate` for activities created from this activity pattern, calculated based on the current date and time
json.common.v1.definitions.ActivityPattern.properties.dueDate.title = Due date
json.common.v1.definitions.ActivityPattern.properties.escalationDate.description = The default `escalationDate` for activities created from this activity pattern, calculated based on the current date and time
json.common.v1.definitions.ActivityPattern.properties.escalationDate.title = Escalation date
json.common.v1.definitions.ActivityPattern.properties.id.description = The unique identifier of this `ActivityPattern`
json.common.v1.definitions.ActivityPattern.properties.id.title = ID
json.common.v1.definitions.ActivityPattern.properties.mandatory.description = The default `mandatory` value for activities created from this activity pattern
json.common.v1.definitions.ActivityPattern.properties.mandatory.title = Mandatory
json.common.v1.definitions.ActivityPattern.properties.priority.description = The default `priority` for activities created from this activity pattern
json.common.v1.definitions.ActivityPattern.properties.priority.title = Priority
json.common.v1.definitions.ActivityPattern.properties.recurring.description = The default `recurring` value for activities created from this activity pattern
json.common.v1.definitions.ActivityPattern.properties.recurring.title = Recurring
json.common.v1.definitions.ActivityPattern.properties.subject.description = The default `subject` for activities created from this activity pattern
json.common.v1.definitions.ActivityPattern.properties.subject.title = Subject
json.common.v1.definitions.ActivityPattern.title = Activity pattern
json.common.v1.definitions.Address.description = An `Address` represents a postal address. The fields available on an `Address` will depend upon the `country` value for the `Address`.
json.common.v1.definitions.Address.properties.CEDEX.description = The CEDEX bureau of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.CEDEX.title = CEDEX
json.common.v1.definitions.Address.properties.addressLine1.description = The first line of the address
json.common.v1.definitions.Address.properties.addressLine1.title = Address line 1
json.common.v1.definitions.Address.properties.addressLine1Kanji.description = The kanji version of the first line of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.addressLine1Kanji.title = Address line 1 kanji
json.common.v1.definitions.Address.properties.addressLine2.description = The second line of the address
json.common.v1.definitions.Address.properties.addressLine2.title = Address line 2
json.common.v1.definitions.Address.properties.addressLine2Kanji.description = The kanji version of the second line of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.addressLine2Kanji.title = Address line 2 kanji
json.common.v1.definitions.Address.properties.addressLine3.description = The third line of the address
json.common.v1.definitions.Address.properties.addressLine3.title = Address line 3
json.common.v1.definitions.Address.properties.addressType.description = The type of the address
json.common.v1.definitions.Address.properties.addressType.title = Address type
json.common.v1.definitions.Address.properties.area.description = The area of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.area.title = Area
json.common.v1.definitions.Address.properties.city.description = The city of the address
json.common.v1.definitions.Address.properties.city.title = City
json.common.v1.definitions.Address.properties.cityKanji.description = The kanji version of the city of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.cityKanji.title = City kanji
json.common.v1.definitions.Address.properties.country.description = The country of the address. The value of the `country` field will affect which other fields on the `Address` are applicable.
json.common.v1.definitions.Address.properties.country.title = Country
json.common.v1.definitions.Address.properties.county.description = The county of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.county.title = County
json.common.v1.definitions.Address.properties.department.description = The department of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.department.title = Department
json.common.v1.definitions.Address.properties.description.description = The description of the address
json.common.v1.definitions.Address.properties.description.title = Description
json.common.v1.definitions.Address.properties.displayName.description = The formatted value of the address represented by this `Address`, including all standard fields for the address's country
json.common.v1.definitions.Address.properties.displayName.title = Display name
json.common.v1.definitions.Address.properties.emirate.description = The emirate of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.emirate.title = Emirate
json.common.v1.definitions.Address.properties.id.description = The unique identifier of this `Address`
json.common.v1.definitions.Address.properties.id.title = ID
json.common.v1.definitions.Address.properties.island.description = The island of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.island.title = Island
json.common.v1.definitions.Address.properties.oblast.description = The oblast of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.oblast.title = Oblast
json.common.v1.definitions.Address.properties.parish.description = The parish of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.parish.title = Parish
json.common.v1.definitions.Address.properties.postalCode.description = The postal code of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.postalCode.title = Postal code
json.common.v1.definitions.Address.properties.prefecture.description = The prefecture of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.prefecture.title = Prefecture
json.common.v1.definitions.Address.properties.province.description = The province of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.province.title = Province
json.common.v1.definitions.Address.properties.spatialPoint.description = The latitude and longitude of this address, if it has been geocoded
json.common.v1.definitions.Address.properties.spatialPoint.title = Spatial point
json.common.v1.definitions.Address.properties.state.description = The state of the address. Only applicable in certain countries.
json.common.v1.definitions.Address.properties.state.title = State
json.common.v1.definitions.Address.properties.validUntil.description = The date and time that the address is valid until
json.common.v1.definitions.Address.properties.validUntil.title = Valid until
json.common.v1.definitions.Address.title = Address
json.common.v1.definitions.Assignee.description = An `Assignee` represents the target of an assignment action, such as a user/group combination, assignment queue, or automatic rule-based assignment
json.common.v1.definitions.Assignee.properties.assigneeId.description = Unique ID to reference this `Assignee` for includes
json.common.v1.definitions.Assignee.properties.assigneeId.title = Assignee ID
json.common.v1.definitions.Assignee.properties.autoAssign.description = Set to `true` to indicate the assignment should be done automatically by the system. Cannot be combined with any other fields.
json.common.v1.definitions.Assignee.properties.autoAssign.title = Auto assign
json.common.v1.definitions.Assignee.properties.groupId.description = The ID of the `Group` that the resource should be assigned to. If specified without the `userId` field, the `User` within the `Group` is selected by assignment rules. If specified along with the `userId` field, that specific `User` is assigned the element.
json.common.v1.definitions.Assignee.properties.groupId.title = Group ID
json.common.v1.definitions.Assignee.properties.name.description = A human-readable name for the type of assignment that this `Assignee` represents
json.common.v1.definitions.Assignee.properties.name.title = Name
json.common.v1.definitions.Assignee.properties.queueId.description = The ID of the `Queue` that the resource should be assigned to. Cannot be combined with any other fields.
json.common.v1.definitions.Assignee.properties.queueId.title = Queue ID
json.common.v1.definitions.Assignee.properties.userId.description = The ID of the `User` that the resource should be assigned to. The `groupId` field must also be specified if the `userId` field is specified, and the `User` must be a member of that `Group` and have permission to be assigned the element.
json.common.v1.definitions.Assignee.properties.userId.title = User ID
json.common.v1.definitions.Assignee.title = Assignee
json.common.v1.definitions.Contact.description = A `Contact` represents a person or company
json.common.v1.definitions.Contact.properties.addressBookUID.description = The unique ID of this `Contact` within the contact management system. Only applicable if the `Contact` has been linked to a contact management system.
json.common.v1.definitions.Contact.properties.addressBookUID.title = Address book UID
json.common.v1.definitions.Contact.properties.cellPhone.description = The person's mobile phone number. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.cellPhone.title = Cell phone
json.common.v1.definitions.Contact.properties.companyName.description = The name of the company represented by this `Contact`. Only applicable for a `Contact` that represents a company.
json.common.v1.definitions.Contact.properties.companyName.title = Company name
json.common.v1.definitions.Contact.properties.dateOfBirth.description = The person's date of birth. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.dateOfBirth.title = Date of birth
json.common.v1.definitions.Contact.properties.displayName.description = A formatted representation of the full name for this `Contact', including all applicable fields such as `firstName` or `lastName`
json.common.v1.definitions.Contact.properties.displayName.title = Display name
json.common.v1.definitions.Contact.properties.emailAddress1.description = The contact's primary e-mail address
json.common.v1.definitions.Contact.properties.emailAddress1.title = E-mail address 1
json.common.v1.definitions.Contact.properties.emailAddress2.description = The contact's secondary e-mail address
json.common.v1.definitions.Contact.properties.emailAddress2.title = E-mail address 2
json.common.v1.definitions.Contact.properties.firstName.description = The persons's first name. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.firstName.title = First name
json.common.v1.definitions.Contact.properties.homePhone.description = The person's home phone number. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.homePhone.title = Home phone
json.common.v1.definitions.Contact.properties.id.description = The unique identifier of this `Contact`
json.common.v1.definitions.Contact.properties.id.title = ID
json.common.v1.definitions.Contact.properties.lastName.description = The person's last name. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.lastName.title = Last name
json.common.v1.definitions.Contact.properties.preferred.description = A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for a `Contact` that represents a vendor.
json.common.v1.definitions.Contact.properties.preferred.title = Preferred
json.common.v1.definitions.Contact.properties.primaryAddress.description = The contact's primary address
json.common.v1.definitions.Contact.properties.primaryAddress.title = Primary address
json.common.v1.definitions.Contact.properties.primaryLanguage.description = The contact's primary language
json.common.v1.definitions.Contact.properties.primaryLanguage.title = Primary language
json.common.v1.definitions.Contact.properties.primaryLocale.description = The contact's primary locale
json.common.v1.definitions.Contact.properties.primaryLocale.title = Primary locale
json.common.v1.definitions.Contact.properties.primaryPhone.description = The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field
json.common.v1.definitions.Contact.properties.primaryPhone.title = Primary phone
json.common.v1.definitions.Contact.properties.primaryPhoneType.description = The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for a `Contact` that represents a person.
json.common.v1.definitions.Contact.properties.primaryPhoneType.title = Primary phone type
json.common.v1.definitions.Contact.properties.subtype.description = The specific type of contact that this `Contact` represents, such as `Person` or `Company`. The set of fields that can be set on a `Contact` depend on its `subtype`.
json.common.v1.definitions.Contact.properties.subtype.title = Subtype
json.common.v1.definitions.Contact.properties.taxId.description = The contact's tax ID
json.common.v1.definitions.Contact.properties.taxId.title = Tax ID
json.common.v1.definitions.Contact.properties.workPhone.description = The contact's work phone number, if this `Contact` represents a person, or the business's phone number, if this `Contact` represents a company
json.common.v1.definitions.Contact.properties.workPhone.title = Work phone
json.common.v1.definitions.Contact.title = Contact
json.common.v1.definitions.Document.description = A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to.
json.common.v1.definitions.Document.properties.author.description = The name of the person who created this document
json.common.v1.definitions.Document.properties.author.title = Author
json.common.v1.definitions.Document.properties.dateModified.description = The date and time that this `Document` was most recently updated
json.common.v1.definitions.Document.properties.dateModified.title = Date modified
json.common.v1.definitions.Document.properties.description.description = A description of this document
json.common.v1.definitions.Document.properties.description.title = Description
json.common.v1.definitions.Document.properties.docUID.description = The unique identifier for this `Document` in the linked document management system. The exact format of the identifier depends upon the specifics of the document management system the application is linked to.
json.common.v1.definitions.Document.properties.docUID.title = Document UID
json.common.v1.definitions.Document.properties.id.description = The unique identifier of this `Document`
json.common.v1.definitions.Document.properties.id.title = ID
json.common.v1.definitions.Document.properties.inbound.description = This field indicates whether this document is considered to be inbound, outbound, or neither
json.common.v1.definitions.Document.properties.inbound.title = Inbound
json.common.v1.definitions.Document.properties.language.description = The language in which this document was produced
json.common.v1.definitions.Document.properties.language.title = Language
json.common.v1.definitions.Document.properties.mimeType.description = The MIME type of this document, such as `application/msword` for a Microsoft Word document
json.common.v1.definitions.Document.properties.mimeType.title = MIME type
json.common.v1.definitions.Document.properties.name.description = The name of this document
json.common.v1.definitions.Document.properties.name.title = Name
json.common.v1.definitions.Document.properties.obsolete.description = Setting this field to `true` indicates that the information in this document can no longer be relied upon to be current and relevant. This is often used instead of deletion to preserve history.
json.common.v1.definitions.Document.properties.obsolete.title = Obsolete
json.common.v1.definitions.Document.properties.recipient.description = The name of the intended recipient of this document
json.common.v1.definitions.Document.properties.recipient.title = Recipient
json.common.v1.definitions.Document.properties.section.description = The section to which this document belongs
json.common.v1.definitions.Document.properties.section.title = Section
json.common.v1.definitions.Document.properties.securityType.description = The security level that has been assigned to this document
json.common.v1.definitions.Document.properties.securityType.title = Security type
json.common.v1.definitions.Document.properties.status.description = The current status of this document, such as `draft` or `approved`
json.common.v1.definitions.Document.properties.status.title = Status
json.common.v1.definitions.Document.properties.type.description = The specific type of document
json.common.v1.definitions.Document.properties.type.title = Type
json.common.v1.definitions.Document.title = Document
json.common.v1.definitions.DocumentContent.description = The contents of a `Document`
json.common.v1.definitions.DocumentContent.properties.contents.description = The contents of this document as a Base64-encoded string
json.common.v1.definitions.DocumentContent.properties.contents.title = Contents
json.common.v1.definitions.DocumentContent.properties.responseMimeType.description = The MIME type of this document's contents, such as `application/msword` for a Microsoft Word document
json.common.v1.definitions.DocumentContent.properties.responseMimeType.title = Response MIME type
json.common.v1.definitions.DocumentContent.properties.url.description = The URL of this document within the linked document management system
json.common.v1.definitions.DocumentContent.properties.url.title = URL
json.common.v1.definitions.DocumentContent.title = Document content
json.common.v1.definitions.GroupDetail.description = Used to represent a reference to a `Group`
json.common.v1.definitions.GroupDetail.properties.displayName.description = The name of the `Group`
json.common.v1.definitions.GroupDetail.properties.displayName.title = Display name
json.common.v1.definitions.GroupDetail.properties.id.description = The unique identifier of the `Group`
json.common.v1.definitions.GroupDetail.properties.id.title = ID
json.common.v1.definitions.GroupDetail.title = Group detail
json.common.v1.definitions.Note.description = A `Note` is used to capture any sort of additional text that needs to be associated with another business object. A `Note` consists of a `body` that contains the actual text of the note, along with other fields the represent additional metadata about the note.
json.common.v1.definitions.Note.properties.author.description = The `User` who authored this note
json.common.v1.definitions.Note.properties.author.title = Author
json.common.v1.definitions.Note.properties.body.description = The text of this note
json.common.v1.definitions.Note.properties.body.title = Body
json.common.v1.definitions.Note.properties.bodySummary.description = A shorter summary of this note's `body` field, more suitable for displaying in a list of notes
json.common.v1.definitions.Note.properties.bodySummary.title = Body summary
json.common.v1.definitions.Note.properties.confidential.description = A `true` value for this field indicates that the note contains confidential information
json.common.v1.definitions.Note.properties.confidential.title = Confidential
json.common.v1.definitions.Note.properties.createdDate.description = The date and time that this `Note` was created
json.common.v1.definitions.Note.properties.createdDate.title = Created date
json.common.v1.definitions.Note.properties.id.description = Unique identifier of this `Note`
json.common.v1.definitions.Note.properties.id.title = ID
json.common.v1.definitions.Note.properties.securityType.description = The security level that has been assigned to this note
json.common.v1.definitions.Note.properties.securityType.title = Security type
json.common.v1.definitions.Note.properties.subject.description = The subject of this note
json.common.v1.definitions.Note.properties.subject.title = Subject
json.common.v1.definitions.Note.properties.topic.description = The topic of this note
json.common.v1.definitions.Note.properties.topic.title = Topic
json.common.v1.definitions.Note.properties.updateTime.description = The date and time when this `Note` was most recently updated
json.common.v1.definitions.Note.properties.updateTime.title = Update time
json.common.v1.definitions.Note.title = Note
json.common.v1.definitions.QueueDetail.description = Used to represent a reference to a `Queue`
json.common.v1.definitions.QueueDetail.properties.displayName.description = The name of the `Queue`
json.common.v1.definitions.QueueDetail.properties.displayName.title = Display name
json.common.v1.definitions.QueueDetail.properties.id.description = The unique identifier of the `Queue`
json.common.v1.definitions.QueueDetail.properties.id.title = ID
json.common.v1.definitions.QueueDetail.title = Queue detail
json.common.v1.definitions.TypeFilter.description = A `TypeFilter` represents a filtered set of the `TypeKey` values from a `TypeList`
json.common.v1.definitions.TypeFilter.properties.description.description = The description of this `TypeFilter`
json.common.v1.definitions.TypeFilter.properties.description.title = Description
json.common.v1.definitions.TypeFilter.properties.name.description = The name of this `TypeFilter`
json.common.v1.definitions.TypeFilter.properties.name.title = Name
json.common.v1.definitions.TypeFilter.properties.typeKeys.description = The `code` values for the `TypeKeys` that are included by this `TypeFilter`
json.common.v1.definitions.TypeFilter.properties.typeKeys.title = TypeKeys
json.common.v1.definitions.TypeFilter.title = TypeFilter
json.common.v1.definitions.TypeKey.description = A `TypeKey` represents one of the possible enumerated values of a `TypeList`
json.common.v1.definitions.TypeKey.properties.categories.description = The categories that this `TypeKey` belongs to. Categories are formatted by combining the name of the `TypeList` with the `code` for its `TypeKey`, separated by a `.` character.
json.common.v1.definitions.TypeKey.properties.categories.title = Categories
json.common.v1.definitions.TypeKey.properties.code.description = The code for this `TypeKey`. `TypeKey` codes are unique within a `TypeList`.
json.common.v1.definitions.TypeKey.properties.code.title = Code
json.common.v1.definitions.TypeKey.properties.description.description = The longer description of this `TypeKey`
json.common.v1.definitions.TypeKey.properties.description.title = Description
json.common.v1.definitions.TypeKey.properties.name.description = The human-readable name of this `TypeKey`
json.common.v1.definitions.TypeKey.properties.name.title = Name
json.common.v1.definitions.TypeKey.properties.priority.description = The order of this `TypeKey` relative to other `TypeKeys` in the same `TypeList`. A `TypeKey` with a lower `priority` will appear before a `TypeKey` with a higher priority when the values for a `TypeList` are presented in sorted order.
json.common.v1.definitions.TypeKey.properties.priority.title = Priority
json.common.v1.definitions.TypeKey.properties.retired.description = A `true` value for this field indicates that the `TypeKey` value should no longer be used. Retired `TypeKey` values are retained only for the sake of historical data that may already be using the `TypeKey`.
json.common.v1.definitions.TypeKey.properties.retired.title = Retried
json.common.v1.definitions.TypeKey.title = TypeKey
json.common.v1.definitions.TypeList.description = A `TypeList` represents a list of enumerated `TypeKey` values
json.common.v1.definitions.TypeList.properties.description.description = The description of this `TypeList`
json.common.v1.definitions.TypeList.properties.description.title = Description
json.common.v1.definitions.TypeList.properties.name.description = The name of this `TypeList`
json.common.v1.definitions.TypeList.properties.name.title = Name
json.common.v1.definitions.TypeList.properties.typeFilters.description = The set of `TypeFilters` available on this `TypeList`. A `TypeFilter` represents a filtered subset of the `TypeKeys` in this `TypeList`.
json.common.v1.definitions.TypeList.properties.typeFilters.title = TypeFilters
json.common.v1.definitions.TypeList.properties.typeKeys.description = The list of `TypeKeys` available on this `TypeList`. A `TypeKey` represents one of the enumerated values that comprise this `TypeList`.
json.common.v1.definitions.TypeList.properties.typeKeys.title = TypeKeys
json.common.v1.definitions.TypeList.title = TypeList
json.composite.v1.definitions.CompositeRequest.description = The body of a composite request
json.composite.v1.definitions.CompositeRequest.properties.requestTag.description = A tag for this composite request that will be added to log entries and request metrics. Composite requests that represent the same high-level action can be given the same tag so that request metrics such as request time can be tracked across all composite requests using that tag.
json.composite.v1.definitions.CompositeRequest.properties.requestTag.title = Request tag
json.composite.v1.definitions.CompositeRequest.properties.requests.description = The list of subrequests
json.composite.v1.definitions.CompositeRequest.properties.requests.title = Requests
json.composite.v1.definitions.CompositeRequest.properties.selections.description = The list of selections
json.composite.v1.definitions.CompositeRequest.properties.selections.title = Selections
json.composite.v1.definitions.CompositeRequest.title = Composite request
json.composite.v1.definitions.CompositeResponse.description = The body of a composite response. The `responses` field will have one element for every entry in the `requests` field, and responses will appear in the same order.
json.composite.v1.definitions.CompositeResponse.properties.requestFailed.description = This field will be set to `true` if any subrequest failed or if committing data failed
json.composite.v1.definitions.CompositeResponse.properties.requestFailed.title = Request failed
json.composite.v1.definitions.CompositeResponse.properties.responses.description = The list of subresponses, appearing in the same order as the elements in the `requests` field of the request
json.composite.v1.definitions.CompositeResponse.properties.responses.title = Responses
json.composite.v1.definitions.CompositeResponse.properties.selections.description = The list of selections, appearing in the same order as the elements in the `selections` field of the request
json.composite.v1.definitions.CompositeResponse.properties.selections.title = Selections
json.composite.v1.definitions.CompositeResponse.title = Composite response
json.composite.v1.definitions.CompositeSelectionRequest.description = An individual selection within the composite request
json.composite.v1.definitions.CompositeSelectionRequest.properties.parameters.description = Query parameters to apply to the selection. Each key in the parameters object should be the name of the query parameter, while the value should be appropriate for the type of parameter.
json.composite.v1.definitions.CompositeSelectionRequest.properties.parameters.title = Parameters
json.composite.v1.definitions.CompositeSelectionRequest.properties.uri.description = The path to select. The path must start with `/` and cannot contain whitespace.
json.composite.v1.definitions.CompositeSelectionRequest.properties.uri.title = URI
json.composite.v1.definitions.CompositeSelectionRequest.properties.vars.description = A list of variables to extract from the response to this selection, for use in subsequent selections within the same composite request
json.composite.v1.definitions.CompositeSelectionRequest.properties.vars.title = Vars
json.composite.v1.definitions.CompositeSelectionRequest.title = Composite selection request
json.composite.v1.definitions.CompositeSubRequest.description = An individual subrequest of the composite request
json.composite.v1.definitions.CompositeSubRequest.properties.body.description = The body of the subrequest
json.composite.v1.definitions.CompositeSubRequest.properties.body.title = Body
json.composite.v1.definitions.CompositeSubRequest.properties.includeResponse.description = Setting this field to `false` will cause the response to this subrequest to be omitted from the composite response. Setting this to false can be useful in cases where intermediate results are not interesting to the caller, saving response time by not sending back those results.
json.composite.v1.definitions.CompositeSubRequest.properties.includeResponse.title = Include response
json.composite.v1.definitions.CompositeSubRequest.properties.method.description = The HTTP method for the subrequest. Must be one of `DELETE`, `PATCH`, `POST`, or `PUT`, compared case insensitively.
json.composite.v1.definitions.CompositeSubRequest.properties.method.title = Method
json.composite.v1.definitions.CompositeSubRequest.properties.parameters.description = Query parameters to apply to the subrequest. Each key in the parameters object should be the name of the query parameter, while the value should be appropriate for the type of parameter.
json.composite.v1.definitions.CompositeSubRequest.properties.parameters.title = Parameters
json.composite.v1.definitions.CompositeSubRequest.properties.uri.description = The path for the subrequest. The path must start with `/` and cannot contain whitespace.
json.composite.v1.definitions.CompositeSubRequest.properties.uri.title = URI
json.composite.v1.definitions.CompositeSubRequest.properties.vars.description = A list of variables to extract from the response to this subrequest, for use in subsequent subrequests or selections within the same composite request
json.composite.v1.definitions.CompositeSubRequest.properties.vars.title = Vars
json.composite.v1.definitions.CompositeSubRequest.title = Composite subrequest
json.composite.v1.definitions.CompositeSubRequestVar.description = A variable used to extract a value from a subrequest or selection response, for use in later subrequests or selections within the same composite request
json.composite.v1.definitions.CompositeSubRequestVar.properties.name.description = The name of the variable. This is the name which the variable can be referenced by in subsequent subrequests or selections, using `${{name}}` syntax within the `body`, `uri`, or `parameters` of the subsequent subrequest or selection.
json.composite.v1.definitions.CompositeSubRequestVar.properties.name.title = Title
json.composite.v1.definitions.CompositeSubRequestVar.properties.path.description = The JsonPath expression to execute against the response in order to produce the value
json.composite.v1.definitions.CompositeSubRequestVar.properties.path.title = Path
json.composite.v1.definitions.CompositeSubRequestVar.title = Composite subrequest variable
json.composite.v1.definitions.CompositeSubResponse.description = The response to a composite subrequest or selection
json.composite.v1.definitions.CompositeSubResponse.properties.body.description = The body of the subresponse
json.composite.v1.definitions.CompositeSubResponse.properties.body.title = Body
json.composite.v1.definitions.CompositeSubResponse.properties.headers.description = The headers returned for the subresponse
json.composite.v1.definitions.CompositeSubResponse.properties.headers.title = Headers
json.composite.v1.definitions.CompositeSubResponse.properties.requestError.description = The details of any error that occurred when processing the associated subrequest or selection
json.composite.v1.definitions.CompositeSubResponse.properties.requestError.title = Request error
json.composite.v1.definitions.CompositeSubResponse.properties.responseIncluded.description = A `false` value indicates that the `includeResponse` property on the corresponding subrequest was set to `false`, and the rest of this subresponse has been omitted
json.composite.v1.definitions.CompositeSubResponse.properties.responseIncluded.title = Response included
json.composite.v1.definitions.CompositeSubResponse.properties.responseSerializationFailed.description = A `true` value indicates that serializing the response to the corresponding subrequest failed. The error will be logged, but not returned to the caller. Response serialization failures will not cause the overall request to fail and will not prevent data from being committed. This case should rarely, if ever, occur during normal operation.
json.composite.v1.definitions.CompositeSubResponse.properties.responseSerializationFailed.title = Response serialization failed
json.composite.v1.definitions.CompositeSubResponse.properties.skipped.description = A `true` value indicates that the subrequest was skipped due to the failure of an earlier subrequest
json.composite.v1.definitions.CompositeSubResponse.properties.skipped.title = Skipped
json.composite.v1.definitions.CompositeSubResponse.properties.status.description = The HTTP response status code generated by the associated subrequest or selection
json.composite.v1.definitions.CompositeSubResponse.properties.status.title = Status
json.composite.v1.definitions.CompositeSubResponse.properties.varsError.description = The details of any errors that occurred when attempting to process the `vars` on the associated subrequest or selection
json.composite.v1.definitions.CompositeSubResponse.properties.varsError.title = Vars error
json.composite.v1.definitions.CompositeSubResponse.title = Composite subresponse
json.composite.v1.definitions.Headers.additionalProperties.description = A set of name/value pairs that correspond to HTTP header names and values
json.composite.v1.definitions.Headers.additionalProperties.title = Headers
json.composite.v1.definitions.Headers.description = A set of name/value pairs that correspond to HTTP header names and values
json.composite.v1.definitions.Headers.title = Headers
json.contact.v1.definitions.ABContact.description = An `ABContact` represents a person, a company or a place
json.contact.v1.definitions.ABContact.properties.cellPhone.description = The person's mobile phone number. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.cellPhone.title = Cell phone
json.contact.v1.definitions.ABContact.properties.contactSubtype.description = The type of contact that this `ABContact` represents, such as `ABPerson` or `ABCompany`. The set of fields that can be set on an `ABContact` depend on its `contactSubtype`.
json.contact.v1.definitions.ABContact.properties.contactSubtype.title = Contact subtype
json.contact.v1.definitions.ABContact.properties.createStatus.description = Creation status of this `ABContact`
json.contact.v1.definitions.ABContact.properties.createStatus.title = Create status
json.contact.v1.definitions.ABContact.properties.dateOfBirth.description = The person's date of birth. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.dateOfBirth.title = Date of birth
json.contact.v1.definitions.ABContact.properties.displayName.description = A formatted representation of the full name for this `ABContact', including all applicable fields such as `firstName` or `lastName`
json.contact.v1.definitions.ABContact.properties.displayName.title = Display name
json.contact.v1.definitions.ABContact.properties.emailAddress1.description = The contact's primary email address
json.contact.v1.definitions.ABContact.properties.emailAddress1.title = Email address 1
json.contact.v1.definitions.ABContact.properties.emailAddress2.description = The contact's secondary email address
json.contact.v1.definitions.ABContact.properties.emailAddress2.title = Email address 2
json.contact.v1.definitions.ABContact.properties.faxPhone.description = The contact's fax phone number
json.contact.v1.definitions.ABContact.properties.faxPhone.title = Fax phone
json.contact.v1.definitions.ABContact.properties.firstName.description = The persons's first name. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.firstName.title = First name
json.contact.v1.definitions.ABContact.properties.firstNameKanji.description = The kanji version of the first name of the person represented by this `ABContact`. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.firstNameKanji.title = First name kanji
json.contact.v1.definitions.ABContact.properties.homePhone.description = The person's home phone number. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.homePhone.title = Home phone
json.contact.v1.definitions.ABContact.properties.id.description = The unique identifier of this `ABContact`
json.contact.v1.definitions.ABContact.properties.id.title = ID
json.contact.v1.definitions.ABContact.properties.lastName.description = The person's last name. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.lastName.title = Last name
json.contact.v1.definitions.ABContact.properties.lastNameKanji.description = The kanji version of the last name of the person represented by this `ABContact`. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.lastNameKanji.title = Last name kanji
json.contact.v1.definitions.ABContact.properties.licenseNumber.description = The person's driver's license number. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.licenseNumber.title = Driver's license number
json.contact.v1.definitions.ABContact.properties.licenseState.description = The person's driver's license state. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.licenseState.title = Driver's license state
json.contact.v1.definitions.ABContact.properties.linkID.description = The ID used by client applications to link with the ContactManager
json.contact.v1.definitions.ABContact.properties.linkID.title = Link id
json.contact.v1.definitions.ABContact.properties.middleName.description = The person's middle name. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.middleName.title = Middle name
json.contact.v1.definitions.ABContact.properties.name.description = The name of the company or the place represented by this `ABContact`. Only applicable for an `ABContact` that represents a company or a place.
json.contact.v1.definitions.ABContact.properties.name.title = Name
json.contact.v1.definitions.ABContact.properties.nameKanji.description = The kanji version of the name of the company represented by this `ABContact`. Only applicable for an `ABContact` that represents a company or a place.
json.contact.v1.definitions.ABContact.properties.nameKanji.title = Name kanji
json.contact.v1.definitions.ABContact.properties.notes.description = Comments about this `ABContact`
json.contact.v1.definitions.ABContact.properties.notes.title = Notes
json.contact.v1.definitions.ABContact.properties.particle.description = The particle portion of the name of the person represented by this `ABContact`. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.particle.title = Particle
json.contact.v1.definitions.ABContact.properties.preferred.description = A `true` value for this field indicates that the vendor is one of the insurer's preferred vendors. Only applicable for an `ABContact` that represents a vendor.
json.contact.v1.definitions.ABContact.properties.preferred.title = Preferred
json.contact.v1.definitions.ABContact.properties.prefix.description = The name prefix of the contact. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.prefix.title = Prefix
json.contact.v1.definitions.ABContact.properties.primaryAddress.description = The contact's primary address
json.contact.v1.definitions.ABContact.properties.primaryAddress.title = Primary address
json.contact.v1.definitions.ABContact.properties.primaryPhone.description = The contact's primary phone number, as determined by the type of phone number selected in the `primaryPhoneType` field
json.contact.v1.definitions.ABContact.properties.primaryPhone.title = Primary phone
json.contact.v1.definitions.ABContact.properties.primaryPhoneType.description = The type of the contact's primary phone, such as `home` or `mobile`. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.primaryPhoneType.title = Primary phone type
json.contact.v1.definitions.ABContact.properties.score.description = The overall review score for this `ABContact`
json.contact.v1.definitions.ABContact.properties.score.title = Score
json.contact.v1.definitions.ABContact.properties.services.description = The vendor services assigned to this `ABContact`
json.contact.v1.definitions.ABContact.properties.services.title = Services
json.contact.v1.definitions.ABContact.properties.suffix.description = The name suffix of the contact. Only applicable for an `ABContact` that represents a person.
json.contact.v1.definitions.ABContact.properties.suffix.title = Suffix
json.contact.v1.definitions.ABContact.properties.tags.description = The list of `ContactTag` tags for this `ABContact`
json.contact.v1.definitions.ABContact.properties.tags.title = Tags
json.contact.v1.definitions.ABContact.properties.taxId.description = The contact's tax ID. Only applicable for an `ABContact` that represents a company or a person.
json.contact.v1.definitions.ABContact.properties.taxId.title = Tax ID
json.contact.v1.definitions.ABContact.properties.vendorAvailability.description = The availability of a vendor contact
json.contact.v1.definitions.ABContact.properties.vendorAvailability.title = Vendor availability
json.contact.v1.definitions.ABContact.properties.workPhone.description = The contact's work phone number, if this `ABContact` represents a person, or the business's phone number, if this `ABContact` represents a company
json.contact.v1.definitions.ABContact.properties.workPhone.title = Work phone
json.contact.v1.definitions.ABContact.title = ABContact
json.contact.v1.definitions.CodeReference.description = A reference object that combines a code with a human-readable name
json.contact.v1.definitions.CodeReference.properties.code.description = The referenced code
json.contact.v1.definitions.CodeReference.properties.code.title = Code
json.contact.v1.definitions.CodeReference.properties.displayName.description = The name of the reference
json.contact.v1.definitions.CodeReference.properties.displayName.title = Display name
json.contact.v1.definitions.CodeReference.title = Code reference
json.contact.v1.definitions.ContactSearchRequestAttributes.description = Criteria of the contact to search for
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.allTagsRequired.description = A `true` value indicates a contact must have all the specified tags to be included in the search results. A `false` value indicates a contact must have at least one of the specified tags to be included in the search results.
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.allTagsRequired.title = All tags required
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.contactSubtype.description = The subtype of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.contactSubtype.title = Contact subtype
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.coordinates.description = The latitude and longitude of an address
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.coordinates.title = Coordinates
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.firstName.description = The first name of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.firstName.title = First name
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.firstNameKanji.description = The kanji version of the first name of the person represented by this `ABContact`. Only applicable when searching for an `ABContact` that represents a person.
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.firstNameKanji.title = First name kanji
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.lastName.description = The last name of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.lastName.title = Last name
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.lastNameKanji.description = The kanji version of the last name of the person represented by this `ABContact`. Only applicable when searching for an `ABContact` that represents a person.
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.lastNameKanji.title = Last name kanji
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.minimumScore.description = The value that a contact's score must be equal to or greater than to be included in the search results
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.minimumScore.title = Minimum score
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.name.description = The name of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.name.title = Name
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.nameKanji.description = The kanji version of the name of the company represented by this `ABContact`. Only applicable when searching for an `ABContact` that represents a company or a place.
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.nameKanji.title = Name kanji
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.organizationName.description = The name of the contact's employer
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.organizationName.title = Organization name
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.radius.description = The radius of a proximity search
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.radius.title = Radius
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.services.description = The vendor services assigned to the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.services.title = Services
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.tags.description = The list of `ContactTag` tags of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.tags.title = Tags
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.taxId.description = The `taxId` of the contact
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.taxId.title = Tax ID
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.unitOfDistance.description = The `unitOfDistance` to use for proximity searches
json.contact.v1.definitions.ContactSearchRequestAttributes.properties.unitOfDistance.title = Unit of distance
json.contact.v1.definitions.ContactSearchRequestAttributes.title = Contact search request attributes
json.contact.v1.definitions.ContactTag.description = A tag that identifies a broad relationship that the contact has with the insurer, such as client or vendor
json.contact.v1.definitions.ContactTag.properties.type.description = The type of this `ContactTag`
json.contact.v1.definitions.ContactTag.properties.type.title = Type
json.contact.v1.definitions.ContactTag.title = Contact tag
json.contact.v1.definitions.SpecialistService.description = A service that a vendor contact is able to provide
json.contact.v1.definitions.SpecialistService.properties.active.description = A `true` value indicates that this service is active for the specialist and can be used for new service requests
json.contact.v1.definitions.SpecialistService.properties.active.title = Active
json.contact.v1.definitions.SpecialistService.properties.code.description = A unique code identifying the service
json.contact.v1.definitions.SpecialistService.properties.code.title = Code
json.contact.v1.definitions.SpecialistService.properties.description.description = A description of the service
json.contact.v1.definitions.SpecialistService.properties.description.title = Description
json.contact.v1.definitions.SpecialistService.properties.name.description = The name of the service
json.contact.v1.definitions.SpecialistService.properties.name.title = Name
json.contact.v1.definitions.SpecialistService.properties.parent.description = A reference to the service code that is the parent of this service code
json.contact.v1.definitions.SpecialistService.properties.parent.title = Parent
json.contact.v1.definitions.SpecialistService.title = Specialist service
json.framework.v1.definitions.GenericRelation.description = A reference to a related element
json.framework.v1.definitions.GenericRelation.properties.displayName.description = The formatted name of the referenced element
json.framework.v1.definitions.GenericRelation.properties.displayName.title = Display name
json.framework.v1.definitions.GenericRelation.properties.id.description = The unique identifier of the referenced element
json.framework.v1.definitions.GenericRelation.properties.id.title = ID
json.framework.v1.definitions.GenericRelation.properties.jsonPath.description = The path to the referenced element within the overall JSON document
json.framework.v1.definitions.GenericRelation.properties.jsonPath.title = JSON path
json.framework.v1.definitions.GenericRelation.properties.type.description = The type of the referenced element
json.framework.v1.definitions.GenericRelation.properties.type.title = Type
json.framework.v1.definitions.GenericRelation.properties.uri.description = The canonical URI for the referenced element
json.framework.v1.definitions.GenericRelation.properties.uri.title = URI
json.framework.v1.definitions.GenericRelation.title = Generic relation
json.framework.v1.definitions.LinkObject.description = A standard HTTP link
json.framework.v1.definitions.LinkObject.properties.href.description = The URL of the link
json.framework.v1.definitions.LinkObject.properties.href.title = HREF
json.framework.v1.definitions.LinkObject.properties.methods.description = An array of HTTP method names that can be used with the link URL
json.framework.v1.definitions.LinkObject.properties.methods.title = Methods
json.framework.v1.definitions.LinkObject.title = Linked object
json.framework.v1.definitions.Links.additionalProperties.description = A set of named links. Each key represents the name of the link, such as a child of the current element, an action that can be taken on it, or a navigation option.
json.framework.v1.definitions.Links.additionalProperties.title = Links
json.framework.v1.definitions.Links.description = A set of named links
json.framework.v1.definitions.Links.title = Links
json.framework.v1.definitions.MetaObject.description = An element
json.framework.v1.definitions.MetaObject.properties.checksum.description = The checksum of the element
json.framework.v1.definitions.MetaObject.properties.checksum.title = Checksum
json.framework.v1.definitions.MetaObject.properties.id.description = The unique identifier of the element
json.framework.v1.definitions.MetaObject.properties.id.title = ID
json.framework.v1.definitions.MetaObject.properties.links.description = The set of links related to the element
json.framework.v1.definitions.MetaObject.properties.links.title = Links
json.framework.v1.definitions.MetaObject.properties.refid.description = A unique identifier given to the newly created element in the context of the current request
json.framework.v1.definitions.MetaObject.properties.refid.title = Reference ID
json.framework.v1.definitions.MetaObject.properties.related.description = The set of related collections included with the element
json.framework.v1.definitions.MetaObject.properties.related.title = Related collections
json.framework.v1.definitions.MetaObject.properties.type.description = The type of element
json.framework.v1.definitions.MetaObject.properties.type.title = Type
json.framework.v1.definitions.MetaObject.title = Meta object
json.framework.v1.definitions.MonetaryAmount.description = A monetary amount that combines a decimal amount with a currency
json.framework.v1.definitions.MonetaryAmount.properties.amount.description = The decimal amount
json.framework.v1.definitions.MonetaryAmount.properties.amount.title = Amount
json.framework.v1.definitions.MonetaryAmount.properties.currency.description = The currency for the amount
json.framework.v1.definitions.MonetaryAmount.properties.currency.title = Currency
json.framework.v1.definitions.MonetaryAmount.title = Monetary amount
json.framework.v1.definitions.PhoneNumber.description = A phone number, with different components of the number broken out as separate fields
json.framework.v1.definitions.PhoneNumber.properties.countryCode.description = The country code for the phone number
json.framework.v1.definitions.PhoneNumber.properties.countryCode.title = Country code
json.framework.v1.definitions.PhoneNumber.properties.displayName.description = The phone number formatted in a standardized way
json.framework.v1.definitions.PhoneNumber.properties.displayName.title = Display name
json.framework.v1.definitions.PhoneNumber.properties.extension.description = The extension for the phone number
json.framework.v1.definitions.PhoneNumber.properties.extension.title = Extension
json.framework.v1.definitions.PhoneNumber.properties.number.description = The actual phone number, including area code, but excluding the country code and extension
json.framework.v1.definitions.PhoneNumber.properties.number.title = Number
json.framework.v1.definitions.PhoneNumber.title = Phone number
json.framework.v1.definitions.RelatedCollection.description = A set of element references that are related to the element in some way. Used to link elements with their relations when a request is made using the `include` query parameter.
json.framework.v1.definitions.RelatedCollection.properties.count.description = The number of elements included in the `data` array
json.framework.v1.definitions.RelatedCollection.properties.count.title = Count
json.framework.v1.definitions.RelatedCollection.properties.data.description = The list of references to the related elements
json.framework.v1.definitions.RelatedCollection.properties.data.title = Data
json.framework.v1.definitions.RelatedCollection.properties.total.description = The total number of elements in the related set of elements. Only present if the `includeTotal` query parameter is used to request that the total be calculated for an included collection.
json.framework.v1.definitions.RelatedCollection.properties.total.title = Total
json.framework.v1.definitions.RelatedCollection.title = Related collection
json.framework.v1.definitions.RelatedCollections.additionalProperties.description = The related collections. Each key in this object will match the name of the inclusion requested via the `include` query parameter.
json.framework.v1.definitions.RelatedCollections.additionalProperties.title = Related collections
json.framework.v1.definitions.RelatedCollections.description = A set of `RelatedCollection` elements that contain references to elements included using the `include` query parameter on a request
json.framework.v1.definitions.RelatedCollections.title = Related collections
json.framework.v1.definitions.SimpleReference.description = A reference to an element
json.framework.v1.definitions.SimpleReference.properties.displayName.description = The formatted name of the element
json.framework.v1.definitions.SimpleReference.properties.displayName.title = Display name
json.framework.v1.definitions.SimpleReference.properties.id.description = The unique identifier of the referenced element
json.framework.v1.definitions.SimpleReference.properties.id.title = ID
json.framework.v1.definitions.SimpleReference.properties.jsonPath.description = The path to the referenced element within the overall JSON document
json.framework.v1.definitions.SimpleReference.properties.jsonPath.title = JSON path
json.framework.v1.definitions.SimpleReference.properties.refid.description = A unique identifier given to the newly created element in the context of the current request
json.framework.v1.definitions.SimpleReference.properties.refid.title = Reference ID
json.framework.v1.definitions.SimpleReference.properties.type.description = The type of the referenced element
json.framework.v1.definitions.SimpleReference.properties.type.title = Type
json.framework.v1.definitions.SimpleReference.properties.uri.description = The canonical URI for the referenced element
json.framework.v1.definitions.SimpleReference.properties.uri.title = URI
json.framework.v1.definitions.SimpleReference.title = Simple reference
json.framework.v1.definitions.SpatialPoint.description = An object that combines a latitude with a longitude
json.framework.v1.definitions.SpatialPoint.properties.latitude.description = The latitude of the spatial point
json.framework.v1.definitions.SpatialPoint.properties.latitude.title = Latitude
json.framework.v1.definitions.SpatialPoint.properties.longitude.description = The longitude of the spatial point
json.framework.v1.definitions.SpatialPoint.properties.longitude.title = Longitude
json.framework.v1.definitions.SpatialPoint.title = Spatial point
json.framework.v1.definitions.TypeKeyReference.description = A reference to a `TypeKey` element that defines an enumerated value from a `TypeList`
json.framework.v1.definitions.TypeKeyReference.properties.code.description = The `code` of the `TypeKey`
json.framework.v1.definitions.TypeKeyReference.properties.code.title = Code
json.framework.v1.definitions.TypeKeyReference.properties.name.description = The `name` of the `TypeKey`
json.framework.v1.definitions.TypeKeyReference.properties.name.title = Name
json.framework.v1.definitions.TypeKeyReference.title = TypeKey reference
json.systemtools.v1.definitions.BatchProcess.description = A batch process is an automated process that can be run in the background. Batch processes can be scheduled to run automatically or can be started explicitly via the appropriate API call.
json.systemtools.v1.definitions.BatchProcess.properties.distributed.description = Flag indicating whether the batch process is distributed
json.systemtools.v1.definitions.BatchProcess.properties.distributed.title = Distributed
json.systemtools.v1.definitions.BatchProcess.properties.processId.description = Id of the newly created process when a batch process is started. This property is only populated when starting a batch process, and not when otherwise viewing the details of a batch process.
json.systemtools.v1.definitions.BatchProcess.properties.processId.title = Process id
json.systemtools.v1.definitions.BatchProcess.properties.status.description = Status of the batch process
json.systemtools.v1.definitions.BatchProcess.properties.status.title = Status
json.systemtools.v1.definitions.BatchProcess.properties.type.description = The type of batch process
json.systemtools.v1.definitions.BatchProcess.properties.type.title = Type
json.systemtools.v1.definitions.BatchProcess.properties.wasStopped.description = Flag indicating whether the batch process was successfully stopped (a `false` value means the batch process was not already running). This property is only populated when stopping a batch process, and not when otherwise viewing the details of a batch process.
json.systemtools.v1.definitions.BatchProcess.properties.wasStopped.title = Was stopped
json.systemtools.v1.definitions.BatchProcess.properties.workQueueStatus.description = Status of the associated work queue, if any
json.systemtools.v1.definitions.BatchProcess.properties.workQueueStatus.title = Work queue status
json.systemtools.v1.definitions.BatchProcess.title = Batch process
json.systemtools.v1.definitions.BatchProcessArguments.description = The arguments with which a batch process can be started
json.systemtools.v1.definitions.BatchProcessArguments.properties.dbconsistencycheck.description = Arguments for the DBConsistencyCheck batch process
json.systemtools.v1.definitions.BatchProcessArguments.properties.dbconsistencycheck.title = DBConsistencyCheck
json.systemtools.v1.definitions.BatchProcessArguments.properties.purgeAsyncApiRequests.description = Arguments for the PurgeAsyncApiRequests batch process
json.systemtools.v1.definitions.BatchProcessArguments.properties.purgeAsyncApiRequests.title = PurgeAsyncApiRequests
json.systemtools.v1.definitions.BatchProcessArguments.title = Batch process arguments
json.systemtools.v1.definitions.DBConsistencyCheckArguments.description = Arguments for the DBConsistencyCheck batch process
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.checkTypes.description = Array of selected codes (from the ConsistencyCheckType typelist)
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.checkTypes.title = Check types
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.description.description = A description of this run
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.description.title = Description
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.rerunKey.description = Key of previous run, if the batch process is a rerun of that run
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.rerunKey.title = Rerun key
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.tableNames.description = Array of selected table names
json.systemtools.v1.definitions.DBConsistencyCheckArguments.properties.tableNames.title = Table names
json.systemtools.v1.definitions.DBConsistencyCheckArguments.title = DBConsistencyCheckArguments
json.systemtools.v1.definitions.DatabaseConsistencyCheck.description = Details of the consistency check run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.description.description = The description of the consistency check run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.description.title = Description
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.duration.description = Length of time taken by this consistency check run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.duration.title = Duration
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.endTime.description = Time at which this consistency check run ended
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.endTime.title = End time
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.errors.description = Number of errors encountered by the consistency check run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.errors.title = Errors
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.extensionsSchemaVersion.description = Datamodel extension version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.extensionsSchemaVersion.title = Extensions schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.id.description = The unique identifier of this consistency check run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.id.title = Id
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.key.description = Key of this run to be used if it should be rerun
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.key.title = Key
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.majorSchemaVersion.description = Application major schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.majorSchemaVersion.title = Major schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.minorSchemaVersion.description = Application minor schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.minorSchemaVersion.title = Minor schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.platformMajorSchemaVersion.description = Platform major schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.platformMajorSchemaVersion.title = Platform major schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.platformMinorSchemaVersion.description = Platform minor schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.platformMinorSchemaVersion.title = Platform minor schema version
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.startTime.description = Time at which this consistency check run started
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.startTime.title = Start time
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.totalChecks.description = Total number of consistency checks that ran in this run
json.systemtools.v1.definitions.DatabaseConsistencyCheck.properties.totalChecks.title = Total checks
json.systemtools.v1.definitions.DatabaseConsistencyCheck.title = Database consistency check
json.systemtools.v1.definitions.ProcessStatus.description = Contains information about the status of the batch process
json.systemtools.v1.definitions.ProcessStatus.properties.dateCompleted.description = The date the process finished, if it has in fact finished
json.systemtools.v1.definitions.ProcessStatus.properties.dateCompleted.title = Date completed
json.systemtools.v1.definitions.ProcessStatus.properties.dateCreated.description = The date and time that the batch process was last requested to start
json.systemtools.v1.definitions.ProcessStatus.properties.dateCreated.title = Date created
json.systemtools.v1.definitions.ProcessStatus.properties.failedOps.description = The number of failed operations
json.systemtools.v1.definitions.ProcessStatus.properties.failedOps.title = Failed operations
json.systemtools.v1.definitions.ProcessStatus.properties.failureReason.description = If the process failed to complete, the reason why it failed
json.systemtools.v1.definitions.ProcessStatus.properties.failureReason.title = Failure reason
json.systemtools.v1.definitions.ProcessStatus.properties.opsCompleted.description = The number of operations the process completed so far
json.systemtools.v1.definitions.ProcessStatus.properties.opsCompleted.title = Operations completed
json.systemtools.v1.definitions.ProcessStatus.properties.opsExpected.description = The number of operations expected to be completed
json.systemtools.v1.definitions.ProcessStatus.properties.opsExpected.title = Operations expected
json.systemtools.v1.definitions.ProcessStatus.properties.progress.description = Progress in the form `x of y` where `x` is the amount of work completed and `y` is the total amount of work. If `y` is unknown, returns just `x`.
json.systemtools.v1.definitions.ProcessStatus.properties.progress.title = Progress
json.systemtools.v1.definitions.ProcessStatus.properties.serverId.description = Server that ran (or is running) this batch process
json.systemtools.v1.definitions.ProcessStatus.properties.serverId.title = Server ID
json.systemtools.v1.definitions.ProcessStatus.properties.startDate.description = The date and time that the batch process was last started
json.systemtools.v1.definitions.ProcessStatus.properties.startDate.title = Start date
json.systemtools.v1.definitions.ProcessStatus.properties.type.description = The type of process
json.systemtools.v1.definitions.ProcessStatus.properties.type.title = Process type
json.systemtools.v1.definitions.ProcessStatus.title = Process status
json.systemtools.v1.definitions.PurgeAsyncApiRequestsArguments.description = Arguments for the PurgeAsyncApiRequests batch process
json.systemtools.v1.definitions.PurgeAsyncApiRequestsArguments.properties.purgeDaysOld.description = The number of days to keep async API request rows before they can be deleted
json.systemtools.v1.definitions.PurgeAsyncApiRequestsArguments.properties.purgeDaysOld.title = Purge days old
json.systemtools.v1.definitions.PurgeAsyncApiRequestsArguments.title = PurgeAsyncApiRequestsArguments
json.systemtools.v1.definitions.WorkQueueStatus.description = Contains information about the work queue for a distributed batch process
json.systemtools.v1.definitions.WorkQueueStatus.properties.numActiveExecutors.description = The number of active executors
json.systemtools.v1.definitions.WorkQueueStatus.properties.numActiveExecutors.title = Number of active executors
json.systemtools.v1.definitions.WorkQueueStatus.properties.numActiveWorkItems.description = The number of active work items
json.systemtools.v1.definitions.WorkQueueStatus.properties.numActiveWorkItems.title = Number of active work items
json.systemtools.v1.definitions.WorkQueueStatus.title = Work queue status
swagger.admin.v1.definitions.AssignableQueueData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.AssignableQueueData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.AssignableQueueData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.AssignableQueueData.properties.id.title = ID
swagger.admin.v1.definitions.AssignableQueueData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.AssignableQueueData.properties.links.title = Links
swagger.admin.v1.definitions.AssignableQueueData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.AssignableQueueData.properties.method.title = Method
swagger.admin.v1.definitions.AssignableQueueData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.AssignableQueueData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.AssignableQueueData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.AssignableQueueData.properties.related.title = Related
swagger.admin.v1.definitions.AssignableQueueData.properties.type.description = The type of this element
swagger.admin.v1.definitions.AssignableQueueData.properties.type.title = Type
swagger.admin.v1.definitions.AssignableQueueData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.AssignableQueueData.properties.uri.title = URI
swagger.admin.v1.definitions.AssignableQueueList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.AssignableQueueList.properties.count.title = Count
swagger.admin.v1.definitions.AssignableQueueList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.AssignableQueueList.properties.links.title = Links
swagger.admin.v1.definitions.AssignableQueueList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.AssignableQueueList.properties.total.title = Total
swagger.admin.v1.definitions.GroupData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.GroupData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.GroupData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.GroupData.properties.id.title = ID
swagger.admin.v1.definitions.GroupData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.GroupData.properties.links.title = Links
swagger.admin.v1.definitions.GroupData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupData.properties.method.title = Method
swagger.admin.v1.definitions.GroupData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.GroupData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.GroupData.properties.related.title = Related
swagger.admin.v1.definitions.GroupData.properties.type.description = The type of this element
swagger.admin.v1.definitions.GroupData.properties.type.title = Type
swagger.admin.v1.definitions.GroupData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupData.properties.uri.title = URI
swagger.admin.v1.definitions.GroupList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.GroupList.properties.count.title = Count
swagger.admin.v1.definitions.GroupList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.GroupList.properties.links.title = Links
swagger.admin.v1.definitions.GroupList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.GroupList.properties.total.title = Total
swagger.admin.v1.definitions.GroupUserData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.GroupUserData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.GroupUserData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.GroupUserData.properties.id.title = ID
swagger.admin.v1.definitions.GroupUserData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.GroupUserData.properties.links.title = Links
swagger.admin.v1.definitions.GroupUserData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupUserData.properties.method.title = Method
swagger.admin.v1.definitions.GroupUserData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupUserData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.GroupUserData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.GroupUserData.properties.related.title = Related
swagger.admin.v1.definitions.GroupUserData.properties.type.description = The type of this element
swagger.admin.v1.definitions.GroupUserData.properties.type.title = Type
swagger.admin.v1.definitions.GroupUserData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.GroupUserData.properties.uri.title = URI
swagger.admin.v1.definitions.GroupUserList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.GroupUserList.properties.count.title = Count
swagger.admin.v1.definitions.GroupUserList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.GroupUserList.properties.links.title = Links
swagger.admin.v1.definitions.GroupUserList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.GroupUserList.properties.total.title = Total
swagger.admin.v1.definitions.RoleData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.RoleData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.RoleData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.RoleData.properties.id.title = ID
swagger.admin.v1.definitions.RoleData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.RoleData.properties.links.title = Links
swagger.admin.v1.definitions.RoleData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RoleData.properties.method.title = Method
swagger.admin.v1.definitions.RoleData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RoleData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.RoleData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.RoleData.properties.related.title = Related
swagger.admin.v1.definitions.RoleData.properties.type.description = The type of this element
swagger.admin.v1.definitions.RoleData.properties.type.title = Type
swagger.admin.v1.definitions.RoleData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RoleData.properties.uri.title = URI
swagger.admin.v1.definitions.RoleList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.RoleList.properties.count.title = Count
swagger.admin.v1.definitions.RoleList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.RoleList.properties.links.title = Links
swagger.admin.v1.definitions.RoleList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.RoleList.properties.total.title = Total
swagger.admin.v1.definitions.RolePermissionData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.RolePermissionData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.RolePermissionData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.RolePermissionData.properties.id.title = ID
swagger.admin.v1.definitions.RolePermissionData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.RolePermissionData.properties.links.title = Links
swagger.admin.v1.definitions.RolePermissionData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RolePermissionData.properties.method.title = Method
swagger.admin.v1.definitions.RolePermissionData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RolePermissionData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.RolePermissionData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.RolePermissionData.properties.related.title = Related
swagger.admin.v1.definitions.RolePermissionData.properties.type.description = The type of this element
swagger.admin.v1.definitions.RolePermissionData.properties.type.title = Type
swagger.admin.v1.definitions.RolePermissionData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.RolePermissionData.properties.uri.title = URI
swagger.admin.v1.definitions.RolePermissionList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.RolePermissionList.properties.count.title = Count
swagger.admin.v1.definitions.RolePermissionList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.RolePermissionList.properties.links.title = Links
swagger.admin.v1.definitions.RolePermissionList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.RolePermissionList.properties.total.title = Total
swagger.admin.v1.definitions.UserData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.admin.v1.definitions.UserData.properties.checksum.title = Checksum
swagger.admin.v1.definitions.UserData.properties.id.description = The unique identifier of the element
swagger.admin.v1.definitions.UserData.properties.id.title = ID
swagger.admin.v1.definitions.UserData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.admin.v1.definitions.UserData.properties.links.title = Links
swagger.admin.v1.definitions.UserData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.UserData.properties.method.title = Method
swagger.admin.v1.definitions.UserData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.UserData.properties.refid.title = Reference ID
swagger.admin.v1.definitions.UserData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.admin.v1.definitions.UserData.properties.related.title = Related
swagger.admin.v1.definitions.UserData.properties.type.description = The type of this element
swagger.admin.v1.definitions.UserData.properties.type.title = Type
swagger.admin.v1.definitions.UserData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.admin.v1.definitions.UserData.properties.uri.title = URI
swagger.admin.v1.definitions.UserList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.admin.v1.definitions.UserList.properties.count.title = Count
swagger.admin.v1.definitions.UserList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.admin.v1.definitions.UserList.properties.links.title = Links
swagger.admin.v1.definitions.UserList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.admin.v1.definitions.UserList.properties.total.title = Total
swagger.admin.v1.description = APIs for InsuranceSuite administration objects
swagger.admin.v1.info.description = APIs for InsuranceSuite administration objects
swagger.admin.v1.info.title = Admin API
swagger.admin.v1.operations.createGroup.description = Create a new group
swagger.admin.v1.operations.createGroup.responses.201.description = Successfully created the group
swagger.admin.v1.operations.createGroup.summary = Create a new group
swagger.admin.v1.operations.createGroupUser.description = Add a user to the given group
swagger.admin.v1.operations.createGroupUser.responses.201.description = The newly created details of the user's involvement in the given group
swagger.admin.v1.operations.createGroupUser.summary = Add a user to the given group
swagger.admin.v1.operations.createQueue.description = Create a new assignable queue for the given group
swagger.admin.v1.operations.createQueue.responses.201.description = Successfully created an assignable queue for the group
swagger.admin.v1.operations.createQueue.summary = Create a new assignable queue for the given group
swagger.admin.v1.operations.createRole.description = Create a new role
swagger.admin.v1.operations.createRole.responses.201.description = Successfully created a role
swagger.admin.v1.operations.createRole.summary = Create a new role
swagger.admin.v1.operations.createRolePermission.description = Create a new permission on this role
swagger.admin.v1.operations.createRolePermission.responses.201.description = The details of the newly created role permission`
swagger.admin.v1.operations.createRolePermission.summary = Create a new permission on this role
swagger.admin.v1.operations.createUser.description = Create a new user
swagger.admin.v1.operations.createUser.responses.201.description = The details of the newly-created user
swagger.admin.v1.operations.createUser.summary = Create a new user
swagger.admin.v1.operations.deleteGroup.description = Delete a group
swagger.admin.v1.operations.deleteGroup.responses.204.description = Successful deletion
swagger.admin.v1.operations.deleteGroup.summary = Delete a group
swagger.admin.v1.operations.deleteGroupUser.description = Remove a user from the given group
swagger.admin.v1.operations.deleteGroupUser.responses.204.description = Successful removal of the user from the given group
swagger.admin.v1.operations.deleteGroupUser.summary = Remove a user from the given group
swagger.admin.v1.operations.deleteQueue.description = Delete an assignable queue
swagger.admin.v1.operations.deleteQueue.responses.204.description = Successfully deleted an assignable queue
swagger.admin.v1.operations.deleteQueue.summary = Delete an assignable queue
swagger.admin.v1.operations.deleteRole.description = Delete a role
swagger.admin.v1.operations.deleteRole.responses.204.description = Successful deletion
swagger.admin.v1.operations.deleteRole.summary = Delete a role
swagger.admin.v1.operations.deleteRolePermission.description = Delete the permission on the given role
swagger.admin.v1.operations.deleteRolePermission.responses.204.description = Successful deletion
swagger.admin.v1.operations.deleteRolePermission.summary = Delete the permission on the given role
swagger.admin.v1.operations.deleteUser.description = Delete a user
swagger.admin.v1.operations.deleteUser.responses.204.description = Successful deletion
swagger.admin.v1.operations.deleteUser.summary = Delete a user
swagger.admin.v1.operations.getGroup.description = Returns details for a single group
swagger.admin.v1.operations.getGroup.responses.200.description = Successfully returned details for a single group
swagger.admin.v1.operations.getGroup.summary = Returns details for a single group
swagger.admin.v1.operations.getGroupUser.description = Retrieve details of a user's involvement in the given group
swagger.admin.v1.operations.getGroupUser.responses.200.description = Successful response
swagger.admin.v1.operations.getGroupUser.summary = Retrieve details of a user's involvement in the given group
swagger.admin.v1.operations.getGroupUsers.description = Retrieve the users associated with the given group
swagger.admin.v1.operations.getGroupUsers.responses.200.description = Successful response
swagger.admin.v1.operations.getGroupUsers.summary = Retrieve the users associated with the given group
swagger.admin.v1.operations.getGroups.description = Retrieve a list of groups
swagger.admin.v1.operations.getGroups.responses.200.description = Successfully returned a list of groups
swagger.admin.v1.operations.getGroups.summary = Retrieve a list of groups
swagger.admin.v1.operations.getOpenApiSchema.description = Return the Open API 3.0 representation of the schema
swagger.admin.v1.operations.getOpenApiSchema.responses.200.description = Successful response
swagger.admin.v1.operations.getOpenApiSchema.summary = Return the Open API 3.0 representation of the schema
swagger.admin.v1.operations.getQueue.description = Retrieve an assignable queue
swagger.admin.v1.operations.getQueue.responses.200.description = Successfully returned an assignable queue
swagger.admin.v1.operations.getQueue.summary = Retrieve an assignable queue
swagger.admin.v1.operations.getQueues.description = Retrieve the list of assignable queues for the given group
swagger.admin.v1.operations.getQueues.responses.200.description = Successfully returned a list of assignable queues for the given group
swagger.admin.v1.operations.getQueues.summary = Retrieve the list of assignable queues for the given group
swagger.admin.v1.operations.getRole.description = Returns details for a single role
swagger.admin.v1.operations.getRole.responses.200.description = Successfully returned details for a single role
swagger.admin.v1.operations.getRole.summary = Returns details for a single role
swagger.admin.v1.operations.getRolePermission.description = The details of a permission on the given role
swagger.admin.v1.operations.getRolePermission.responses.200.description = Successfully returned a role permission
swagger.admin.v1.operations.getRolePermission.summary = The details of a permission on the given role
swagger.admin.v1.operations.getRolePermissions.description = Retrieve a list of role permissions
swagger.admin.v1.operations.getRolePermissions.responses.200.description = Successfully returned a list of role permissions
swagger.admin.v1.operations.getRolePermissions.summary = Retrieve a list of role permissions
swagger.admin.v1.operations.getRoles.description = Retrieve a list of roles
swagger.admin.v1.operations.getRoles.responses.200.description = Successful response
swagger.admin.v1.operations.getRoles.summary = Retrieve a list of roles
swagger.admin.v1.operations.getUser.description = Returns details for a single user
swagger.admin.v1.operations.getUser.responses.200.description = Returns details for a single user
swagger.admin.v1.operations.getUser.summary = Returns details for a single user
swagger.admin.v1.operations.getUsers.description = Retrieve a list of users
swagger.admin.v1.operations.getUsers.responses.200.description = Successful response
swagger.admin.v1.operations.getUsers.summary = Retrieve a list of users
swagger.admin.v1.operations.patchGroup.description = Update the details of a group
swagger.admin.v1.operations.patchGroup.responses.200.description = Successfully updated
swagger.admin.v1.operations.patchGroup.summary = Update the details of a group
swagger.admin.v1.operations.patchQueue.description = Update an assignable queue
swagger.admin.v1.operations.patchQueue.responses.200.description = Successfully updated an assignable queue
swagger.admin.v1.operations.patchQueue.summary = Update an assignable queue
swagger.admin.v1.operations.updateGroupUser.description = Update the details of a user's involvement in the given group
swagger.admin.v1.operations.updateGroupUser.responses.200.description = Successful response
swagger.admin.v1.operations.updateGroupUser.summary = Update the details of a user's involvement in the given group
swagger.admin.v1.operations.updateRole.description = Update this role's fields
swagger.admin.v1.operations.updateRole.responses.200.description = Successful update
swagger.admin.v1.operations.updateRole.summary = Update this role's fields
swagger.admin.v1.operations.updateUser.description = Update this user's fields
swagger.admin.v1.operations.updateUser.responses.200.description = Successful update
swagger.admin.v1.operations.updateUser.summary = Update this user's fields
swagger.admin.v1.parameters.groupId.description = The REST identifier for the group
swagger.admin.v1.parameters.groupUserId.description = The REST identifier for the group user
swagger.admin.v1.parameters.permissionId.description = The REST identifier for the role permission
swagger.admin.v1.parameters.queueId.description = The identifier for the assignableQueue
swagger.admin.v1.parameters.roleId.description = The REST identifier for the role
swagger.admin.v1.parameters.userId.description = The REST identifier for the user
swagger.admin.v1.title = Admin API
swagger.async.v1.definitions.AsyncRequestData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.async.v1.definitions.AsyncRequestData.properties.checksum.title = Checksum
swagger.async.v1.definitions.AsyncRequestData.properties.id.description = The unique identifier of the element
swagger.async.v1.definitions.AsyncRequestData.properties.id.title = ID
swagger.async.v1.definitions.AsyncRequestData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.async.v1.definitions.AsyncRequestData.properties.links.title = Links
swagger.async.v1.definitions.AsyncRequestData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.async.v1.definitions.AsyncRequestData.properties.method.title = Method
swagger.async.v1.definitions.AsyncRequestData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.async.v1.definitions.AsyncRequestData.properties.refid.title = Reference ID
swagger.async.v1.definitions.AsyncRequestData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.async.v1.definitions.AsyncRequestData.properties.related.title = Related
swagger.async.v1.definitions.AsyncRequestData.properties.type.description = The type of this element
swagger.async.v1.definitions.AsyncRequestData.properties.type.title = Type
swagger.async.v1.definitions.AsyncRequestData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.async.v1.definitions.AsyncRequestData.properties.uri.title = URI
swagger.async.v1.description = APIs for checking the status of asynchronous API requests
swagger.async.v1.info.description = APIs for checking the status of asynchronous API requests
swagger.async.v1.info.title = Async Request API
swagger.async.v1.operations.getAsyncOpenApiSchema.description = Retrieves the `OpenAPI 3.0` schema for this API
swagger.async.v1.operations.getAsyncOpenApiSchema.responses.200.description = The `OpenAPI 3.0` schema for this API
swagger.async.v1.operations.getAsyncOpenApiSchema.summary = Retrieve the `OpenAPI 3.0` schema for this API
swagger.async.v1.operations.getAsyncRequest.description = Retrieves the details of an async request. An async request is made by specifying the `Prefer respond-async` header on the original request.
swagger.async.v1.operations.getAsyncRequest.responses.200.description = The details of the async request
swagger.async.v1.operations.getAsyncRequest.summary = Retrieve details of an async request
swagger.async.v1.operations.getAsyncRequestResponse.description = Retrieve the response to an async request directly on the response payload. The response to this call will have the response code, headers, and response body of the async request.
swagger.async.v1.operations.getAsyncRequestResponse.responses.200.description = The response from the async request
swagger.async.v1.operations.getAsyncRequestResponse.responses.201.description = The response from the async request
swagger.async.v1.operations.getAsyncRequestResponse.responses.204.description = The response from the async request
swagger.async.v1.operations.getAsyncRequestResponse.summary = Retrieve the response to an async request
swagger.async.v1.parameters.asyncRequestId.description = The ID of the async request
swagger.async.v1.title = Async Request API
swagger.batch.v1.operations.batchRequest.description = Post a list of subrequests to make against this endpoint. Subrequests will be executed serially, in the order they are specified in the "requests" property of the input. Responses to each subrequest will then be batched up and returned all together. Subrequests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the subrequest and will override any headers from the main request.
swagger.batch.v1.operations.batchRequest.parameters.body.body.description = The body of the batch request
swagger.batch.v1.operations.batchRequest.parameters.query.includeResponseHeaders.description = Controls what response headers, if any, are included for subresponses. If unspecified, or set to the value "*all", all headers for subresponses will be returned. If set to the value "*none", no headers for subresponses will be returned. Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on subresponses.
swagger.batch.v1.operations.batchRequest.responses.200.description = The batch request itself was well-formed; individual subrequests may have succeeded or failed
swagger.batch.v1.operations.batchRequest.summary = Issue multiple requests at once as a non-transactional batch
swagger.common.v1.definitions.ActivityApprovalAttributes.properties.approvalRationale.description = The rationale for approving this `Activity`
swagger.common.v1.definitions.ActivityApprovalAttributes.properties.approvalRationale.title = Approval rationale
swagger.common.v1.definitions.ActivityApprovalData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.ActivityApprovalData.properties.checksum.title = Checksum
swagger.common.v1.definitions.ActivityApprovalData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.ActivityApprovalData.properties.id.title = ID
swagger.common.v1.definitions.ActivityApprovalData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.ActivityApprovalData.properties.links.title = Links
swagger.common.v1.definitions.ActivityApprovalData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityApprovalData.properties.method.title = Method
swagger.common.v1.definitions.ActivityApprovalData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityApprovalData.properties.refid.title = Reference ID
swagger.common.v1.definitions.ActivityApprovalData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.ActivityApprovalData.properties.related.title = Related
swagger.common.v1.definitions.ActivityApprovalData.properties.type.description = The type of this element
swagger.common.v1.definitions.ActivityApprovalData.properties.type.title = Type
swagger.common.v1.definitions.ActivityApprovalData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityApprovalData.properties.uri.title = URI
swagger.common.v1.definitions.ActivityData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.ActivityData.properties.checksum.title = Checksum
swagger.common.v1.definitions.ActivityData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.ActivityData.properties.id.title = ID
swagger.common.v1.definitions.ActivityData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.ActivityData.properties.links.title = Links
swagger.common.v1.definitions.ActivityData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityData.properties.method.title = Method
swagger.common.v1.definitions.ActivityData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityData.properties.refid.title = Reference ID
swagger.common.v1.definitions.ActivityData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.ActivityData.properties.related.title = Related
swagger.common.v1.definitions.ActivityData.properties.type.description = The type of this element
swagger.common.v1.definitions.ActivityData.properties.type.title = Type
swagger.common.v1.definitions.ActivityData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityData.properties.uri.title = URI
swagger.common.v1.definitions.ActivityList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.ActivityList.properties.count.title = Count
swagger.common.v1.definitions.ActivityList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.ActivityList.properties.links.title = Links
swagger.common.v1.definitions.ActivityList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.ActivityList.properties.total.title = Total
swagger.common.v1.definitions.ActivityPatternData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.ActivityPatternData.properties.checksum.title = Checksum
swagger.common.v1.definitions.ActivityPatternData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.ActivityPatternData.properties.id.title = ID
swagger.common.v1.definitions.ActivityPatternData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.ActivityPatternData.properties.links.title = Links
swagger.common.v1.definitions.ActivityPatternData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityPatternData.properties.method.title = Method
swagger.common.v1.definitions.ActivityPatternData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityPatternData.properties.refid.title = Reference ID
swagger.common.v1.definitions.ActivityPatternData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.ActivityPatternData.properties.related.title = Related
swagger.common.v1.definitions.ActivityPatternData.properties.type.description = The type of this element
swagger.common.v1.definitions.ActivityPatternData.properties.type.title = Type
swagger.common.v1.definitions.ActivityPatternData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ActivityPatternData.properties.uri.title = URI
swagger.common.v1.definitions.ActivityPatternList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.ActivityPatternList.properties.count.title = Count
swagger.common.v1.definitions.ActivityPatternList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.ActivityPatternList.properties.links.title = Links
swagger.common.v1.definitions.ActivityPatternList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.ActivityPatternList.properties.total.title = Total
swagger.common.v1.definitions.AssigneeData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.AssigneeData.properties.checksum.title = Checksum
swagger.common.v1.definitions.AssigneeData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.AssigneeData.properties.id.title = ID
swagger.common.v1.definitions.AssigneeData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.AssigneeData.properties.links.title = Links
swagger.common.v1.definitions.AssigneeData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.AssigneeData.properties.method.title = Method
swagger.common.v1.definitions.AssigneeData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.AssigneeData.properties.refid.title = Reference ID
swagger.common.v1.definitions.AssigneeData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.AssigneeData.properties.related.title = Related
swagger.common.v1.definitions.AssigneeData.properties.type.description = The type of this element
swagger.common.v1.definitions.AssigneeData.properties.type.title = Type
swagger.common.v1.definitions.AssigneeData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.AssigneeData.properties.uri.title = URI
swagger.common.v1.definitions.AssigneeList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.AssigneeList.properties.count.title = Count
swagger.common.v1.definitions.AssigneeList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.AssigneeList.properties.links.title = Links
swagger.common.v1.definitions.AssigneeList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.AssigneeList.properties.total.title = Total
swagger.common.v1.definitions.ContactData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.ContactData.properties.checksum.title = Checksum
swagger.common.v1.definitions.ContactData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.ContactData.properties.id.title = ID
swagger.common.v1.definitions.ContactData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.ContactData.properties.links.title = Links
swagger.common.v1.definitions.ContactData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ContactData.properties.method.title = Method
swagger.common.v1.definitions.ContactData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ContactData.properties.refid.title = Reference ID
swagger.common.v1.definitions.ContactData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.ContactData.properties.related.title = Related
swagger.common.v1.definitions.ContactData.properties.type.description = The type of this element
swagger.common.v1.definitions.ContactData.properties.type.title = Type
swagger.common.v1.definitions.ContactData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.ContactData.properties.uri.title = URI
swagger.common.v1.definitions.ContactList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.ContactList.properties.count.title = Count
swagger.common.v1.definitions.ContactList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.ContactList.properties.links.title = Links
swagger.common.v1.definitions.ContactList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.ContactList.properties.total.title = Total
swagger.common.v1.definitions.DocumentContentData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.DocumentContentData.properties.checksum.title = Checksum
swagger.common.v1.definitions.DocumentContentData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.DocumentContentData.properties.id.title = ID
swagger.common.v1.definitions.DocumentContentData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.DocumentContentData.properties.links.title = Links
swagger.common.v1.definitions.DocumentContentData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentContentData.properties.method.title = Method
swagger.common.v1.definitions.DocumentContentData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentContentData.properties.refid.title = Reference ID
swagger.common.v1.definitions.DocumentContentData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.DocumentContentData.properties.related.title = Related
swagger.common.v1.definitions.DocumentContentData.properties.type.description = The type of this element
swagger.common.v1.definitions.DocumentContentData.properties.type.title = Type
swagger.common.v1.definitions.DocumentContentData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentContentData.properties.uri.title = URI
swagger.common.v1.definitions.DocumentData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.DocumentData.properties.checksum.title = Checksum
swagger.common.v1.definitions.DocumentData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.DocumentData.properties.id.title = ID
swagger.common.v1.definitions.DocumentData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.DocumentData.properties.links.title = Links
swagger.common.v1.definitions.DocumentData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentData.properties.method.title = Method
swagger.common.v1.definitions.DocumentData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentData.properties.refid.title = Reference ID
swagger.common.v1.definitions.DocumentData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.DocumentData.properties.related.title = Related
swagger.common.v1.definitions.DocumentData.properties.type.description = The type of this element
swagger.common.v1.definitions.DocumentData.properties.type.title = Type
swagger.common.v1.definitions.DocumentData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.DocumentData.properties.uri.title = URI
swagger.common.v1.definitions.DocumentList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.DocumentList.properties.count.title = Count
swagger.common.v1.definitions.DocumentList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.DocumentList.properties.links.title = Links
swagger.common.v1.definitions.DocumentList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.DocumentList.properties.total.title = Total
swagger.common.v1.definitions.NoteData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.NoteData.properties.checksum.title = Checksum
swagger.common.v1.definitions.NoteData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.NoteData.properties.id.title = ID
swagger.common.v1.definitions.NoteData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.NoteData.properties.links.title = Links
swagger.common.v1.definitions.NoteData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.NoteData.properties.method.title = Method
swagger.common.v1.definitions.NoteData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.NoteData.properties.refid.title = Reference ID
swagger.common.v1.definitions.NoteData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.NoteData.properties.related.title = Related
swagger.common.v1.definitions.NoteData.properties.type.description = The type of this element
swagger.common.v1.definitions.NoteData.properties.type.title = Type
swagger.common.v1.definitions.NoteData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.NoteData.properties.uri.title = URI
swagger.common.v1.definitions.NoteList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.NoteList.properties.count.title = Count
swagger.common.v1.definitions.NoteList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.NoteList.properties.links.title = Links
swagger.common.v1.definitions.NoteList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.NoteList.properties.total.title = Total
swagger.common.v1.definitions.TypeListData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.common.v1.definitions.TypeListData.properties.checksum.title = Checksum
swagger.common.v1.definitions.TypeListData.properties.id.description = The unique identifier of the element
swagger.common.v1.definitions.TypeListData.properties.id.title = ID
swagger.common.v1.definitions.TypeListData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.common.v1.definitions.TypeListData.properties.links.title = Links
swagger.common.v1.definitions.TypeListData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.TypeListData.properties.method.title = Method
swagger.common.v1.definitions.TypeListData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.TypeListData.properties.refid.title = Reference ID
swagger.common.v1.definitions.TypeListData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.common.v1.definitions.TypeListData.properties.related.title = Related
swagger.common.v1.definitions.TypeListData.properties.type.description = The type of this element
swagger.common.v1.definitions.TypeListData.properties.type.title = Type
swagger.common.v1.definitions.TypeListData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.common.v1.definitions.TypeListData.properties.uri.title = URI
swagger.common.v1.definitions.TypeListList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.common.v1.definitions.TypeListList.properties.count.title = Count
swagger.common.v1.definitions.TypeListList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.common.v1.definitions.TypeListList.properties.links.title = Links
swagger.common.v1.definitions.TypeListList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.common.v1.definitions.TypeListList.properties.total.title = Total
swagger.common.v1.description = APIs for common InsuranceSuite platform objects like activities and notes
swagger.common.v1.info.description = APIs for common InsuranceSuite platform objects like activities and notes
swagger.common.v1.info.title = Common API
swagger.common.v1.operations.approveActivity.description = Marks the `Activity` as approved, setting `approved` to `true`, `status` to `completed`, and updating the `closeDate` and `closeUser`. Only applicable if the `Activity` has an `activityType` of `approval` and has not yet been approved or rejected.
swagger.common.v1.operations.approveActivity.parameters.body.body.description = Additional details of the approval such as the `approvalRationale`
swagger.common.v1.operations.approveActivity.responses.200.description = The details of the updated `Activity`
swagger.common.v1.operations.approveActivity.summary = Approve an `Activity`
swagger.common.v1.operations.assignActivity.description = Assigns or re-assigns an `Activity`
swagger.common.v1.operations.assignActivity.parameters.body.body.description = Specifies the `Assignee` that the `Activity` should be assigned to
swagger.common.v1.operations.assignActivity.responses.200.description = The details of the updated `Activity`
swagger.common.v1.operations.assignActivity.summary = Assign an `Activity`
swagger.common.v1.operations.completeActivity.description = Marks an `Activity` as completed, setting the `status` to `complete` and updating the `closeDate` and `closeUser`. Only allowed if the `Activity` has a `status` of `open`, has been assigned to a specific `User`, and has an `activityType` of `general` or `approvaldenied`.
swagger.common.v1.operations.completeActivity.parameters.body.body.description = A request body can be sent in order to use the `included` feature of the request envelope to update or create additional elements when completing the `Activity`, such as attaching a `Note` to include details of what was done.
swagger.common.v1.operations.completeActivity.responses.200.description = The details of the updated `Activity`
swagger.common.v1.operations.completeActivity.summary = Complete an `Activity`
swagger.common.v1.operations.createActivityNote.description = Creates a new `Note` and associates it with an `Activity`
swagger.common.v1.operations.createActivityNote.parameters.body.body.description = The details of the `Note` to create
swagger.common.v1.operations.createActivityNote.responses.201.description = The details of the newly created `Note`
swagger.common.v1.operations.createActivityNote.summary = Create a `Note` on an `Activity`
swagger.common.v1.operations.deleteDocument.description = Deletes a `Document`
swagger.common.v1.operations.deleteDocument.responses.204.description = Indicates that the `Document` was successfully deleted
swagger.common.v1.operations.deleteDocument.summary = Delete a `Document`
swagger.common.v1.operations.deleteNote.description = Deletes a `Note`
swagger.common.v1.operations.deleteNote.responses.204.description = Indicates that the `Note` was successfully deleted
swagger.common.v1.operations.deleteNote.summary = Delete a `Note`
swagger.common.v1.operations.getActivities.description = Retrieves the `Activity` elements that are assigned to the caller
swagger.common.v1.operations.getActivities.responses.200.description = The paginated list of `Activity` elements
swagger.common.v1.operations.getActivities.summary = Retrieve the `Activity` elements that are assigned to the caller
swagger.common.v1.operations.getActivity.description = Retrieves an `Activity` by its `id`. An `Activity` is an assignable item that represents a task to be done, a decision to be made, or information to be aware of.
swagger.common.v1.operations.getActivity.responses.200.description = The details of the `Activity`
swagger.common.v1.operations.getActivity.summary = Retrieve an `Activity`
swagger.common.v1.operations.getActivityNotes.description = Retrieves the `Note` elements for an `Activity`
swagger.common.v1.operations.getActivityNotes.responses.200.description = The paginated list of `Note` elements for the `Activity`.
swagger.common.v1.operations.getActivityNotes.summary = Retrieve the `Note` elements for an `Activity`
swagger.common.v1.operations.getActivitySuggestedAssignees.description = Retrieves the suggested `Assignee` elements for an `Activity`. An `Assignee` represents the target for an `assign` action. That target can be a concrete assignment request, such as a specific `User` and `Group`, or it can be a request for rule-based assignment, such as automatically determining the assignment or assigning based on specific roles.
swagger.common.v1.operations.getActivitySuggestedAssignees.responses.200.description = The paginated list of suggested `Assignee` elements for this `Activity`
swagger.common.v1.operations.getActivitySuggestedAssignees.summary = Retrieve the suggested `Assignee` elements for an `Activity`
swagger.common.v1.operations.getDocument.description = Retrieves a `Document` by its `id`. A `Document` represents a document within the application, which can have additional metadata such as the author of the document or a specific security level. The actual contents of the document are generally stored in a separate document management system that this application is linked to.
swagger.common.v1.operations.getDocument.responses.200.description = The details of the `Document`
swagger.common.v1.operations.getDocument.summary = Retrieve a `Document`
swagger.common.v1.operations.getDocumentContent.description = Retrieves the contents of a `Document` as a Base64-encoded string
swagger.common.v1.operations.getDocumentContent.responses.200.description = The contents of the `Document` as a Base64-encoded string
swagger.common.v1.operations.getDocumentContent.summary = Retrieve the contents of a `Document`
swagger.common.v1.operations.getNote.description = Retrieves a `Note` by its `id`
swagger.common.v1.operations.getNote.responses.200.description = The details of the `Note`
swagger.common.v1.operations.getNote.summary = Retrieve a `Note`
swagger.common.v1.operations.getOpenApiSchema.description = Retrieves the `OpenAPI 3.0` schema for this API
swagger.common.v1.operations.getOpenApiSchema.responses.200.description = The `OpenAPI 3.0` schema for this API
swagger.common.v1.operations.getOpenApiSchema.summary = Retrieve the `OpenAPI 3.0` schema for this API
swagger.common.v1.operations.getTypeList.description = Retrieves a `TypeList` by `name`. A `TypeList` represents a list of enumerated `TypeKey` values.
swagger.common.v1.operations.getTypeList.parameters.query.includeRetired.description = Indicates whether retired `TypeKey` elements should be included in the response. Defaults to `false`.
swagger.common.v1.operations.getTypeList.parameters.query.typekeyFilter.description = Filters the `typeKeys` array on the response. The query parameter's value should be of the form  `typekeyFilter\=<field>\:<operator>\:<value>`. Valid filter fields include `code`, `category`, `name`, `priority`, and `retired`. See the Cloud API documentation for more information.
swagger.common.v1.operations.getTypeList.parameters.query.typekeySort.description = Sorts the `typeKeys` array on the response. The query parameter's value should be of the form `typekeySort\=<fields>`, where `<fields>` is a comma-separated list of fields to sort on. Valid sort fields include `code`, `name`, `retired`, and `priority`. See the Cloud API documentation for more information.
swagger.common.v1.operations.getTypeList.responses.200.description = The details of the `TypeList`
swagger.common.v1.operations.getTypeList.summary = Retrieve a `TypeList`
swagger.common.v1.operations.getTypeLists.description = Retrieves all `TypeList` elements
swagger.common.v1.operations.getTypeLists.responses.200.description = The paginated list of `TypeList` elements
swagger.common.v1.operations.getTypeLists.summary = Retrieve all `TypeList` elements
swagger.common.v1.operations.patchDocument.description = Updates a `Document`. Can be used to update the metadata about the `Document`, the contents of the `Document, or both.
swagger.common.v1.operations.patchDocument.parameters.formData.content.description = The updated contents of the `Document`
swagger.common.v1.operations.patchDocument.parameters.formData.metadata.description = Metadata about the `Document` such as the `author` or `description`
swagger.common.v1.operations.patchDocument.responses.200.description = The details of the updated `Document`
swagger.common.v1.operations.patchDocument.summary = Update a `Document`
swagger.common.v1.operations.skipActivity.description = Marks an `Activity` as skipped, setting the `status` to `skipped` and updating the `closeDate` and `closeUser`. Only allowed if the `Activity` is not marked as mandatory, has a `status` of `open`, has been assigned to a specific `User`, and has an `activityType` of `general` or `approvaldenied`.
swagger.common.v1.operations.skipActivity.parameters.body.body.description = A request body can be sent in order to use the `included` feature of the request envelope to update or create additional elements when completing the `Activity`, such as attaching a `Note` to include a reason for why the `Activity` was skipped.
swagger.common.v1.operations.skipActivity.responses.200.description = The details of the updated `Activity`
swagger.common.v1.operations.skipActivity.summary = Skip an `Activity`
swagger.common.v1.operations.updateActivity.description = Updates an `Activity`. Only allowed if the `Activity` has a `status` of `open`.
swagger.common.v1.operations.updateActivity.parameters.body.body.description = The fields to update on the `Activity`
swagger.common.v1.operations.updateActivity.responses.200.description = The details of the updated `Activity`
swagger.common.v1.operations.updateActivity.summary = Update an `Activity`
swagger.common.v1.operations.updateNote.description = Updates a `Note`
swagger.common.v1.operations.updateNote.parameters.body.body.description = The fields to update on the `Note`
swagger.common.v1.operations.updateNote.responses.200.description = The details of the updated `Note`
swagger.common.v1.operations.updateNote.summary = Update a `Note`
swagger.common.v1.parameters.activityId.description = The `id` of the `Activity`
swagger.common.v1.parameters.documentId.description = The `id` of the `Document`
swagger.common.v1.parameters.noteId.description = The `id` of the `Note`
swagger.common.v1.paths.typelists._typelist_.parameters.path.typelist.description = The `name` of the `TypeList`
swagger.common.v1.title = Common API
swagger.composite.v1.description = API for composite requests that execute multiple API sub-requests in a single database transaction
swagger.composite.v1.info.description = API for composite requests that execute multiple API sub-requests in a single database transaction
swagger.composite.v1.info.title = Composite API
swagger.composite.v1.operations.compositeRequest.description = Composite API
swagger.composite.v1.operations.compositeRequest.parameters.body.body.description = The body of the request
swagger.composite.v1.operations.compositeRequest.responses.200.description = Success
swagger.composite.v1.operations.compositeRequest.summary = Composite API
swagger.composite.v1.operations.getOpenApiSchema.description = Retrieves the `OpenAPI 3.0` schema for this API
swagger.composite.v1.operations.getOpenApiSchema.responses.200.description = The `OpenAPI 3.0` schema for this API
swagger.composite.v1.operations.getOpenApiSchema.summary = Retrieve the `OpenAPI 3.0` schema for this API
swagger.composite.v1.title = Composite API
swagger.contact.v1.definitions.AddressData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.contact.v1.definitions.AddressData.properties.checksum.title = Checksum
swagger.contact.v1.definitions.AddressData.properties.id.description = The unique identifier of the element
swagger.contact.v1.definitions.AddressData.properties.id.title = ID
swagger.contact.v1.definitions.AddressData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.contact.v1.definitions.AddressData.properties.links.title = Links
swagger.contact.v1.definitions.AddressData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.AddressData.properties.method.title = Method
swagger.contact.v1.definitions.AddressData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.AddressData.properties.refid.title = Reference ID
swagger.contact.v1.definitions.AddressData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.contact.v1.definitions.AddressData.properties.related.title = Related
swagger.contact.v1.definitions.AddressData.properties.type.description = The type of this element
swagger.contact.v1.definitions.AddressData.properties.type.title = Type
swagger.contact.v1.definitions.AddressData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.AddressData.properties.uri.title = URI
swagger.contact.v1.definitions.AddressList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.contact.v1.definitions.AddressList.properties.count.title = Count
swagger.contact.v1.definitions.AddressList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.contact.v1.definitions.AddressList.properties.links.title = Links
swagger.contact.v1.definitions.AddressList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.contact.v1.definitions.AddressList.properties.total.title = Total
swagger.contact.v1.definitions.ContactData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.contact.v1.definitions.ContactData.properties.checksum.title = Checksum
swagger.contact.v1.definitions.ContactData.properties.id.description = The unique identifier of the element
swagger.contact.v1.definitions.ContactData.properties.id.title = ID
swagger.contact.v1.definitions.ContactData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.contact.v1.definitions.ContactData.properties.links.title = Links
swagger.contact.v1.definitions.ContactData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.ContactData.properties.method.title = Method
swagger.contact.v1.definitions.ContactData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.ContactData.properties.refid.title = Reference ID
swagger.contact.v1.definitions.ContactData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.contact.v1.definitions.ContactData.properties.related.title = Related
swagger.contact.v1.definitions.ContactData.properties.type.description = The type of this element
swagger.contact.v1.definitions.ContactData.properties.type.title = Type
swagger.contact.v1.definitions.ContactData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.ContactData.properties.uri.title = URI
swagger.contact.v1.definitions.ContactList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.contact.v1.definitions.ContactList.properties.count.title = Count
swagger.contact.v1.definitions.ContactList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.contact.v1.definitions.ContactList.properties.links.title = Links
swagger.contact.v1.definitions.ContactList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.contact.v1.definitions.ContactList.properties.total.title = Total
swagger.contact.v1.definitions.DocumentContentData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.contact.v1.definitions.DocumentContentData.properties.checksum.title = Checksum
swagger.contact.v1.definitions.DocumentContentData.properties.id.description = The unique identifier of the element
swagger.contact.v1.definitions.DocumentContentData.properties.id.title = ID
swagger.contact.v1.definitions.DocumentContentData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.contact.v1.definitions.DocumentContentData.properties.links.title = Links
swagger.contact.v1.definitions.DocumentContentData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentContentData.properties.method.title = Method
swagger.contact.v1.definitions.DocumentContentData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentContentData.properties.refid.title = Reference ID
swagger.contact.v1.definitions.DocumentContentData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.contact.v1.definitions.DocumentContentData.properties.related.title = Related
swagger.contact.v1.definitions.DocumentContentData.properties.type.description = The type of this element
swagger.contact.v1.definitions.DocumentContentData.properties.type.title = Type
swagger.contact.v1.definitions.DocumentContentData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentContentData.properties.uri.title = URI
swagger.contact.v1.definitions.DocumentData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.contact.v1.definitions.DocumentData.properties.checksum.title = Checksum
swagger.contact.v1.definitions.DocumentData.properties.id.description = The unique identifier of the element
swagger.contact.v1.definitions.DocumentData.properties.id.title = ID
swagger.contact.v1.definitions.DocumentData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.contact.v1.definitions.DocumentData.properties.links.title = Links
swagger.contact.v1.definitions.DocumentData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentData.properties.method.title = Method
swagger.contact.v1.definitions.DocumentData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentData.properties.refid.title = Reference ID
swagger.contact.v1.definitions.DocumentData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.contact.v1.definitions.DocumentData.properties.related.title = Related
swagger.contact.v1.definitions.DocumentData.properties.type.description = The type of this element
swagger.contact.v1.definitions.DocumentData.properties.type.title = Type
swagger.contact.v1.definitions.DocumentData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.contact.v1.definitions.DocumentData.properties.uri.title = URI
swagger.contact.v1.definitions.DocumentList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.contact.v1.definitions.DocumentList.properties.count.title = Count
swagger.contact.v1.definitions.DocumentList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.contact.v1.definitions.DocumentList.properties.links.title = Links
swagger.contact.v1.definitions.DocumentList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.contact.v1.definitions.DocumentList.properties.total.title = Total
swagger.contact.v1.description = APIs for InsuranceSuite contact objects
swagger.contact.v1.info.description = APIs for InsuranceSuite contact objects
swagger.contact.v1.info.title = Contact API
swagger.contact.v1.operations.createContact.description = Create a new contact
swagger.contact.v1.operations.createContact.responses.201.description = Successfully created
swagger.contact.v1.operations.createContact.summary = Create a new contact
swagger.contact.v1.operations.createContactAddress.description = Create a new address for the given contact
swagger.contact.v1.operations.createContactAddress.responses.201.description = Successfully created
swagger.contact.v1.operations.createContactAddress.summary = Create a new address for the given contact
swagger.contact.v1.operations.createContactDocument.description = Create a new document on a contact
swagger.contact.v1.operations.createContactDocument.responses.201.description = Successfully created
swagger.contact.v1.operations.createContactDocument.summary = Create a new document on a contact
swagger.contact.v1.operations.deleteContact.description = Delete a contact
swagger.contact.v1.operations.deleteContact.responses.204.description = Successful deletion
swagger.contact.v1.operations.deleteContact.summary = Delete a contact
swagger.contact.v1.operations.deleteContactAddress.description = Delete an address on the given contact
swagger.contact.v1.operations.deleteContactAddress.responses.204.description = Successful deletion
swagger.contact.v1.operations.deleteContactAddress.summary = Delete an address on the given contact
swagger.contact.v1.operations.getContact.description = The details of a specific contact
swagger.contact.v1.operations.getContact.responses.200.description = Success
swagger.contact.v1.operations.getContact.summary = The details of a specific contact
swagger.contact.v1.operations.getContactAddress.description = The details of a specific address on the given contact
swagger.contact.v1.operations.getContactAddress.responses.200.description = Success
swagger.contact.v1.operations.getContactAddress.summary = The details of a specific address on the given contact
swagger.contact.v1.operations.getContactAddresses.description = Get the collection of addresses for a given contact
swagger.contact.v1.operations.getContactAddresses.responses.200.description = Success
swagger.contact.v1.operations.getContactAddresses.summary = Get the collection of addresses for a given contact
swagger.contact.v1.operations.getContactDocuments.description = Get the collection of documents on a contact
swagger.contact.v1.operations.getContactDocuments.responses.200.description = Successful response
swagger.contact.v1.operations.getContactDocuments.summary = Get the collection of documents on a contact
swagger.contact.v1.operations.getContacts.description = Get the collection of contacts
swagger.contact.v1.operations.getContacts.responses.200.description = Success
swagger.contact.v1.operations.getContacts.summary = Get the collection of contacts
swagger.contact.v1.operations.getOpenApiSchema.description = Return the Open API 3.0 representation of the schema
swagger.contact.v1.operations.getOpenApiSchema.responses.200.description = Successful response
swagger.contact.v1.operations.getOpenApiSchema.summary = Return the Open API 3.0 representation of the schema
swagger.contact.v1.operations.patchContact.description = Update the details of the specific contact
swagger.contact.v1.operations.patchContact.responses.200.description = Successfully updated
swagger.contact.v1.operations.patchContact.summary = Update the details of the specific contact
swagger.contact.v1.operations.patchContactAddress.description = Update the details of the specific address on the given contact
swagger.contact.v1.operations.patchContactAddress.responses.200.description = Successfully updated
swagger.contact.v1.operations.patchContactAddress.summary = Update the details of the specific address on the given contact
swagger.contact.v1.operations.searchContacts.description = Searches for contacts that match the specified criteria
swagger.contact.v1.operations.searchContacts.responses.200.description = Returns a list of contacts that match the search criteria
swagger.contact.v1.operations.searchContacts.summary = Searches for contacts that match the specified criteria
swagger.contact.v1.parameters.addressId.description = The identifier for the address
swagger.contact.v1.parameters.contactId.description = The identifier for the contact
swagger.contact.v1.parameters.includePendingCreates.description = Should pending create contacts be included in search
swagger.contact.v1.title = Contact API
swagger.framework.v1.definitions.DataEnvelope.description = Data envelope for requests and responses for individual elements. The primary data for the element will be in the `attributes` field.
swagger.framework.v1.definitions.DataEnvelope.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.framework.v1.definitions.DataEnvelope.properties.checksum.title = Checksum
swagger.framework.v1.definitions.DataEnvelope.properties.id.description = The unique identifier of the element
swagger.framework.v1.definitions.DataEnvelope.properties.id.title = ID
swagger.framework.v1.definitions.DataEnvelope.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.framework.v1.definitions.DataEnvelope.properties.links.title = Links
swagger.framework.v1.definitions.DataEnvelope.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.framework.v1.definitions.DataEnvelope.properties.method.title = Method
swagger.framework.v1.definitions.DataEnvelope.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.framework.v1.definitions.DataEnvelope.properties.refid.title = Reference ID
swagger.framework.v1.definitions.DataEnvelope.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.framework.v1.definitions.DataEnvelope.properties.related.title = Related
swagger.framework.v1.definitions.DataEnvelope.properties.type.description = The type of this element
swagger.framework.v1.definitions.DataEnvelope.properties.type.title = Type
swagger.framework.v1.definitions.DataEnvelope.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.framework.v1.definitions.DataEnvelope.properties.uri.title = URI
swagger.framework.v1.definitions.DataEnvelope.title = Data envelope
swagger.framework.v1.definitions.DataListEnvelope.description = Data envelope for responses for lists of elements. The primary list of elements will be in the `data` field.
swagger.framework.v1.definitions.DataListEnvelope.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.framework.v1.definitions.DataListEnvelope.properties.count.title = Count
swagger.framework.v1.definitions.DataListEnvelope.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.framework.v1.definitions.DataListEnvelope.properties.links.title = Links
swagger.framework.v1.definitions.DataListEnvelope.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.framework.v1.definitions.DataListEnvelope.properties.total.title = Total
swagger.framework.v1.definitions.DataListEnvelope.title = Data list envelope
swagger.framework.v1.parameters.enablePolymorphism.description = Whether or not to use the `discriminator`/`oneOf` pattern to output schemas in cases where the valid set of fields can vary based on some attribute of the data such as the country or subtype.  Defaults to `true`. See the documentation for more information.
swagger.framework.v1.parameters.fields.description = Allows the caller to specify the set of fields that should be included on the response. This can be used to limit the set of fields returned as well as to include optional fields that otherwise wouldn't normally be returned. The parameter is either of the form `fields\=<field list>` or `fields\=<include>\:<field list>`, where `<field list>` consists of a comma-separated list of field or field set names. See the documentation for more information.
swagger.framework.v1.parameters.filter.description = Filters the list of results based on the specified field, operator, and value. The parameter is either of the form `filter\=<field>\:<operator>\:<value>` or `filter\=<include>\:<field>\:<operator>\:<value>`. See the documentation for more information.
swagger.framework.v1.parameters.filterByUser.description = Whether or not to filter endpoints and schema properties by the authorization of the caller. Defaults to `false`.
swagger.framework.v1.parameters.include.description = Used to request that additional resources be returned with the API response in the `included` section of the responses. The `include` parameter can appear multiple times, and is a comma-separated list of additional resources to include. See the documentation for more information.
swagger.framework.v1.parameters.includeTotal.description = Used to request that results should include a count of the total number of results available, which may be more than the total number of results currently being returned. This parameter is of the form `includeTotal\=<true|false>` or `includeTotal\=<include>\:<true|false>`. If not specified, the default is considered to be `false`. See the documentation for more information about response pagination.
swagger.framework.v1.parameters.omitInclusions.description = Whether or not to omit the `included` properties on request and response schemas.  Defaults to `false`. See the documentation for more information.
swagger.framework.v1.parameters.pageOffset.description = The offset of the first result to fetch when fetching a paginated set of results. The parameter is of the form `pageOffset\=<number>` where the first result has an offset of 0. For example, `pageOffset\=25` will skip the first 25 results in sorted order. If not specified, the default value is 0. See the documentation for more information about response pagination.
swagger.framework.v1.parameters.pageSize.description = The maximum number of results to return in the response. The parameter is of the form `pageSize\=<size>` or `pageSize\=<include>\:<size>`. The maximum allowed `pageSize` and the default `pageSize` both depend on the specific API endpoint the request is made to. See the documentation for more information about response pagination.
swagger.framework.v1.parameters.prettyPrintSchema.description = Whether or not to pretty-print the returned schema, making it larger but more human readable.  Defaults to `false`.
swagger.framework.v1.parameters.sort.description = Controls the sorting of elements within a response. The sort parameter is of the form `sort\=<fields>` or `sort\=<include>\:<fields>`, where `<fields>` represents a comma-separated list of field names to sort on. Field names can be prefixed with `-` to request a descending sort, otherwise the sort will be ascending. See the documentation for more information.
swagger.systemtools.v1.definitions.BatchProcessData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.systemtools.v1.definitions.BatchProcessData.properties.checksum.title = Checksum
swagger.systemtools.v1.definitions.BatchProcessData.properties.id.description = The unique identifier of the element
swagger.systemtools.v1.definitions.BatchProcessData.properties.id.title = ID
swagger.systemtools.v1.definitions.BatchProcessData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.systemtools.v1.definitions.BatchProcessData.properties.links.title = Links
swagger.systemtools.v1.definitions.BatchProcessData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessData.properties.method.title = Method
swagger.systemtools.v1.definitions.BatchProcessData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessData.properties.refid.title = Reference ID
swagger.systemtools.v1.definitions.BatchProcessData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.systemtools.v1.definitions.BatchProcessData.properties.related.title = Related
swagger.systemtools.v1.definitions.BatchProcessData.properties.type.description = The type of this element
swagger.systemtools.v1.definitions.BatchProcessData.properties.type.title = Type
swagger.systemtools.v1.definitions.BatchProcessData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessData.properties.uri.title = URI
swagger.systemtools.v1.definitions.BatchProcessList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.systemtools.v1.definitions.BatchProcessList.properties.count.title = Count
swagger.systemtools.v1.definitions.BatchProcessList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.systemtools.v1.definitions.BatchProcessList.properties.links.title = Links
swagger.systemtools.v1.definitions.BatchProcessList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.systemtools.v1.definitions.BatchProcessList.properties.total.title = Total
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.checksum.title = Checksum
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.id.description = The unique identifier of the element
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.id.title = ID
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.links.title = Links
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.method.title = Method
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.refid.title = Reference ID
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.related.title = Related
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.type.description = The type of this element
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.type.title = Type
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.BatchProcessStartData.properties.uri.title = URI
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.checksum.description = A checksum for the element that can be used to prevent lost updates by detecting that the element has been updated since the caller last retrieved it. See the documentation for more information about lost update prevention.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.checksum.title = Checksum
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.id.description = The unique identifier of the element
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.id.title = ID
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.links.description = Links related to the specific element, including child elements and actions that can be taken on the element. Links are sensitive to both the caller's permissions and the state of the data. Only applicable to responses.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.links.title = Links
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.method.description = The HTTP method that should be used for an included element. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.method.title = Method
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.refid.description = Used to assign a temporary identifier to an element created using request inclusion. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.refid.title = Reference ID
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.related.description = Information about collections and elements related to this element that have been included in the response through request inclusion. Only applicable to responses. See the documentation for more information about read inclusion.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.related.title = Related
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.type.description = The type of this element
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.type.title = Type
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.uri.description = The URI for an included element, representing the parent to create the element on if the `method` is `post` or the element to update if the `method` is `patch`. Only applicable to requests. See the documentation for more information about request inclusion.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckData.properties.uri.title = URI
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.count.description = The number of elements currently being returned. This may be less than the total number of elements. Pagination links under the `links` property can be used to access additional pages of results, if any are available.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.count.title = Count
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.links.description = Links related to the overall list of elements, used to paginate the list
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.links.title = Links
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.total.description = The total number of elements available, which may be greater than the `count` of elements currently being returned. Only included in responses when the `includeTotal` query parameter is set to `true`. The maximum number of elements counted is 1000. If the response value is 1000, the actual count could be 1000 or greater.
swagger.systemtools.v1.definitions.DatabaseConsistencyCheckList.properties.total.title = Total
swagger.systemtools.v1.description = APIs for InsuranceSuite system tools
swagger.systemtools.v1.info.description = APIs for InsuranceSuite system tools
swagger.systemtools.v1.info.title = System Tools API
swagger.systemtools.v1.operations.getBatchProcess.description = Retrieves a batch process by its type name. A batch process is an automated process that can be run in the background.
swagger.systemtools.v1.operations.getBatchProcess.responses.200.description = The details of the batch process
swagger.systemtools.v1.operations.getBatchProcess.summary = Retrieve details of a batch process
swagger.systemtools.v1.operations.getBatchProcesses.description = Retrieve information about all batch processes
swagger.systemtools.v1.operations.getBatchProcesses.responses.200.description = The paginated list of `BatchProcess` elements
swagger.systemtools.v1.operations.getBatchProcesses.summary = Retrieve information about all batch processes
swagger.systemtools.v1.operations.getDatabaseConsistencyCheck.description = Retrieve details of a consistency check run
swagger.systemtools.v1.operations.getDatabaseConsistencyCheck.responses.200.description = Details of a consistency check run
swagger.systemtools.v1.operations.getDatabaseConsistencyCheck.summary = Retrieve details of a consistency check run
swagger.systemtools.v1.operations.getDatabaseConsistencyChecks.description = Retrieves a list of consistency check runs
swagger.systemtools.v1.operations.getDatabaseConsistencyChecks.responses.200.description = The list of consistency check runs
swagger.systemtools.v1.operations.getDatabaseConsistencyChecks.summary = Retrieves a list of consistency check runs
swagger.systemtools.v1.operations.getDatabaseConsistencyReport.description = Returns the consistency check report in zip file format
swagger.systemtools.v1.operations.getDatabaseConsistencyReport.parameters.query.errorsOnly.description = Whether to include only errors in the consistency check report. Defaults to false.
swagger.systemtools.v1.operations.getDatabaseConsistencyReport.responses.200.description = The consistency check report in zip file format
swagger.systemtools.v1.operations.getDatabaseConsistencyReport.summary = Returns the consistency check report in zip file format
swagger.systemtools.v1.operations.getSystemToolsOpenApiSchema.description = Retrieves the `OpenAPI 3.0` schema for this API
swagger.systemtools.v1.operations.getSystemToolsOpenApiSchema.responses.200.description = The `OpenAPI 3.0` schema for this API
swagger.systemtools.v1.operations.getSystemToolsOpenApiSchema.summary = Retrieve the `OpenAPI 3.0` schema for this API
swagger.systemtools.v1.operations.startBatchProcess.description = Starts the batch process. If the batch process was already running, no new process is started. The response will indicate whether a new process was actually started, based on whether the `processId` property is populated.
swagger.systemtools.v1.operations.startBatchProcess.responses.200.description = Returns the batch process details. The new process id is populated if the batch process was not already running.
swagger.systemtools.v1.operations.startBatchProcess.summary = Starts the batch process
swagger.systemtools.v1.operations.stopBatchProcess.description = Stops the batch process. If the batch process was not already running, this has no effect. The response will indicate whether this call actually stopped the batch process, based on the `wasStopped` property.
swagger.systemtools.v1.operations.stopBatchProcess.responses.200.description = Returns the batch process details
swagger.systemtools.v1.operations.stopBatchProcess.summary = Stops the batch process
swagger.systemtools.v1.parameters.batchProcessType.description = The type of the batch process
swagger.systemtools.v1.parameters.dbccId.description = The identifier for the dbcc run
swagger.systemtools.v1.title = System Tools API
